(self.webpackChunktodolist=self.webpackChunktodolist||[]).push([[179],{"./src/App/App.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AppBaseExample:function(){return AppBaseExample},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return App_stories}});var defineProperty=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/defineProperty.js"),react=__webpack_require__("./node_modules/react/index.js"),CircularProgress=__webpack_require__("./node_modules/@mui/material/CircularProgress/CircularProgress.js"),AppBar=__webpack_require__("./node_modules/@mui/material/AppBar/AppBar.js"),Typography=__webpack_require__("./node_modules/@mui/material/Typography/Typography.js"),Button=__webpack_require__("./node_modules/@mui/material/Button/Button.js"),LinearProgress=__webpack_require__("./node_modules/@mui/material/LinearProgress/LinearProgress.js"),Container=__webpack_require__("./node_modules/@mui/material/Container/Container.js"),Toolbar=__webpack_require__("./node_modules/@mui/material/Toolbar/Toolbar.js"),es=__webpack_require__("./node_modules/react-redux/es/index.js"),useAppDispatch=es.I0,useAppSelector=es.v9,objectSpread2=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),todolists_api=__webpack_require__("./src/api/todolists-api.tsx"),handleServerAppError=function handleServerAppError(data,dispatch){data.messages.length?dispatch(setAppErrorAC({error:data.messages[0]})):dispatch(setAppErrorAC({error:"Some error occurred"})),dispatch(setAppStatusAC({status:"failed"}))},handleNetworkAppError=function handleNetworkAppError(err,dispatch){dispatch(setAppErrorAC(err.message?{error:err.message}:{error:"Some error occurred"})),dispatch(setAppStatusAC({status:"failed"}))},redux_toolkit_esm=__webpack_require__("./node_modules/@reduxjs/toolkit/dist/redux-toolkit.esm.js"),slice=(0,redux_toolkit_esm.oM)({name:"auth",initialState:{isLoggedIn:!1},reducers:{setIsLoggedInAC:function setIsLoggedInAC(state,action){state.isLoggedIn=action.payload.value}}}),authReducer=slice.reducer,setIsLoggedInAC=slice.actions.setIsLoggedInAC,app_reducer_slice=(0,redux_toolkit_esm.oM)({name:"app",initialState:{status:"idle",error:null,isInitialized:!1},reducers:{setAppErrorAC:function setAppErrorAC(state,action){state.error=action.payload.error},setAppStatusAC:function setAppStatusAC(state,action){state.status=action.payload.status},setAppInitializedAC:function setAppInitializedAC(state,action){state.isInitialized=action.payload.value}}}),appReducer=app_reducer_slice.reducer,_slice$actions=app_reducer_slice.actions,setAppErrorAC=_slice$actions.setAppErrorAC,setAppInitializedAC=_slice$actions.setAppInitializedAC,setAppStatusAC=_slice$actions.setAppStatusAC,todolist_reducer_slice=(0,redux_toolkit_esm.oM)({name:"todolists",initialState:[],reducers:{removeTodolistAC:function removeTodolistAC(state,action){var index=state.findIndex((function(tdl){return tdl.id===action.payload.todolistId}));index>-1&&state.splice(index,1)},addTodolistAC:function addTodolistAC(state,action){state.unshift((0,objectSpread2.Z)((0,objectSpread2.Z)({},action.payload.todolist),{},{filter:"all",entityStatus:"idle"}))},changeTodolistTitleAC:function changeTodolistTitleAC(state,action){var index=state.findIndex((function(tdl){return tdl.id===action.payload.todolistId}));state[index].title=action.payload.title},changeTodolistFilterAC:function changeTodolistFilterAC(state,action){var index=state.findIndex((function(tdl){return tdl.id===action.payload.todolistId}));state[index].filter=action.payload.filter},changeTodolistEntityStatusAC:function changeTodolistEntityStatusAC(state,action){var index=state.findIndex((function(tdl){return tdl.id===action.payload.todolistId}));state[index].entityStatus=action.payload.status},setTodolistsAC:function setTodolistsAC(state,action){return action.payload.todolists.map((function(tl){return(0,objectSpread2.Z)((0,objectSpread2.Z)({},tl),{},{filter:"all",entityStatus:"idle"})}))}}}),todolistReducer=todolist_reducer_slice.reducer,todolist_reducer_slice$actions=todolist_reducer_slice.actions,changeTodolistTitleAC=todolist_reducer_slice$actions.changeTodolistTitleAC,changeTodolistFilterAC=todolist_reducer_slice$actions.changeTodolistFilterAC,removeTodolistAC=todolist_reducer_slice$actions.removeTodolistAC,setTodolistsAC=todolist_reducer_slice$actions.setTodolistsAC,changeTodolistEntityStatusAC=todolist_reducer_slice$actions.changeTodolistEntityStatusAC,addTodolistAC=todolist_reducer_slice$actions.addTodolistAC,task_reducer_slice=(0,redux_toolkit_esm.oM)({name:"tasks",initialState:{},reducers:{removeTaskAC:function removeTaskAC(state,action){var tasks=state[action.payload.todolistId],index=tasks.findIndex((function(t){return t.id===action.payload.taskId}));index>-1&&tasks.splice(index,1)},addTaskAC:function addTaskAC(state,action){state[action.payload.todoListId].push(action.payload)},updateTaskAC:function updateTaskAC(state,action){var tasks=state[action.payload.todolistId],index=tasks.findIndex((function(t){return t.id===action.payload.taskId}));index>-1&&(tasks[index]=(0,objectSpread2.Z)((0,objectSpread2.Z)({},tasks[index]),action.payload.model))},setTasksAC:function setTasksAC(state,action){state[action.payload.todolistId]=action.payload.tasks}},extraReducers:function extraReducers(builder){builder.addCase(addTodolistAC,(function(state,action){state[action.payload.todolist.id]=[]})),builder.addCase(removeTodolistAC,(function(state,action){delete state[action.payload.todolistId]})),builder.addCase(setTodolistsAC,(function(state,action){action.payload.todolists.forEach((function(tl){state[tl.id]=[]}))}))}}),taskReducer=task_reducer_slice.reducer,task_reducer_slice$actions=task_reducer_slice.actions,updateTaskAC=task_reducer_slice$actions.updateTaskAC,removeTaskAC=task_reducer_slice$actions.removeTaskAC,setTasksAC=task_reducer_slice$actions.setTasksAC,addTaskAC=task_reducer_slice$actions.addTaskAC,updateTaskTC=function updateTaskTC(todolistId,taskId,domainModel){return function(dispatch,getState){var task=getState().tasks[todolistId].find((function(t){return t.id===taskId}));if(task){var apiModel=(0,objectSpread2.Z)({status:task.status,title:task.title,description:task.description,priority:task.priority,startDate:task.startDate,deadline:task.deadline},domainModel);todolists_api.Z2.updateTask(todolistId,taskId,apiModel).then((function(res){0===res.data.resultCode?dispatch(updateTaskAC({todolistId:todolistId,taskId:taskId,model:domainModel})):handleServerAppError(res.data,dispatch)})).catch((function(err){handleNetworkAppError(err,dispatch)}))}else console.warn("task not found")}},Grid=__webpack_require__("./node_modules/@mui/material/Grid/Grid.js"),Paper=__webpack_require__("./node_modules/@mui/material/Paper/Paper.js"),AddItemForm=__webpack_require__("./src/components/AddItemForm/AddItemForm.tsx"),objectWithoutProperties=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),EditableSpan=__webpack_require__("./src/components/EditableSpan/EditableSpan.tsx"),IconButton=__webpack_require__("./node_modules/@mui/material/IconButton/IconButton.js"),Delete=__webpack_require__("./node_modules/@mui/icons-material/Delete.js"),Task=__webpack_require__("./src/features/TodolistsList/Todolist/Task/Task.tsx"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),_excluded=["demo"],Todolist=react.memo((function(_ref){var _ref$demo=_ref.demo,demo=void 0!==_ref$demo&&_ref$demo,props=(0,objectWithoutProperties.Z)(_ref,_excluded),dispatch=useAppDispatch();console.log("Todolist is called");var addTask=(0,react.useCallback)((function(title){props.addTask(props.todolist.id,title)}),[props.todolist.title,props.todolist.id]),changeTodolistTitle=(0,react.useCallback)((function(newTitle){props.changeTodolistTitle(props.todolist.id,newTitle)}),[props.todolist.id,props.changeTodolistTitle]),onAllClickHandler=(0,react.useCallback)((function(){return props.changeFilter(props.todolist.id,"all")}),[props.changeFilter,props.todolist.id]),onActiveClickHandler=(0,react.useCallback)((function(){return props.changeFilter(props.todolist.id,"active")}),[props.changeFilter,props.todolist.id]),onCompletedClickHandler=(0,react.useCallback)((function(){return props.changeFilter(props.todolist.id,"completed")}),[props.changeFilter,props.todolist.id]),tasksForTodoList=props.tasks;return"active"===props.todolist.filter&&(tasksForTodoList=props.tasks.filter((function(task){return task.status===todolists_api.Fm.New}))),"completed"===props.todolist.filter&&(tasksForTodoList=props.tasks.filter((function(task){return task.status===todolists_api.Fm.Completed}))),(0,react.useEffect)((function(){demo||dispatch(function fetchTasksTC(todolistId){return function(dispatch){dispatch(setAppStatusAC({status:"loading"})),todolists_api.Z2.getTasks(todolistId).then((function(res){dispatch(setTasksAC({tasks:res.data.items,todolistId:todolistId})),dispatch(setAppStatusAC({status:"succeeded"}))})).catch((function(err){handleNetworkAppError(err,dispatch)}))}}(props.todolist.id))}),[]),(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)(EditableSpan.m,{title:props.todolist.title,onChange:changeTodolistTitle}),(0,jsx_runtime.jsx)(IconButton.Z,{onClick:function removeTodolistHandler(){props.removeTodolist(props.todolist.id)},disabled:"loading"===props.todolist.entityStatus,children:(0,jsx_runtime.jsx)(Delete.Z,{})}),(0,jsx_runtime.jsx)(AddItemForm.B,{addItem:addTask,disabled:"loading"===props.todolist.entityStatus}),(0,jsx_runtime.jsx)("ul",{children:tasksForTodoList.map((function(task){return(0,jsx_runtime.jsx)(Task.i,{changeTaskStatus:props.changeTaskStatus,changeTaskTitle:props.changeTaskTitle,removeTask:props.removeTask,task:task,todolistId:props.todolist.id},task.id)}))}),(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)(Button.Z,{size:"large",variant:"all"===props.todolist.filter?"outlined":"text",onClick:onAllClickHandler,children:"All"}),(0,jsx_runtime.jsx)(Button.Z,{color:"warning",size:"large",variant:"active"===props.todolist.filter?"outlined":"text",onClick:onActiveClickHandler,children:"Active"}),(0,jsx_runtime.jsx)(Button.Z,{color:"success",size:"large",variant:"completed"===props.todolist.filter?"outlined":"text",onClick:onCompletedClickHandler,children:"Completed"})]})]})}));try{Todolist.displayName="Todolist",Todolist.__docgenInfo={description:"",displayName:"Todolist",props:{todolist:{defaultValue:null,description:"",name:"todolist",required:!0,type:{name:"TodolistDomainType"}},tasks:{defaultValue:null,description:"",name:"tasks",required:!0,type:{name:"TaskType[]"}},changeFilter:{defaultValue:null,description:"",name:"changeFilter",required:!0,type:{name:"(todolistID: string, value: FilterValueType) => void"}},addTask:{defaultValue:null,description:"",name:"addTask",required:!0,type:{name:"(todolistID: string, title: string) => void"}},changeTaskStatus:{defaultValue:null,description:"",name:"changeTaskStatus",required:!0,type:{name:"(todolistID: string, taskId: string, status: TaskStatuses) => void"}},changeTaskTitle:{defaultValue:null,description:"",name:"changeTaskTitle",required:!0,type:{name:"(todolistID: string, id: string, title: string) => void"}},removeTask:{defaultValue:null,description:"",name:"removeTask",required:!0,type:{name:"(todolistID: string, taskId: string) => void"}},changeTodolistTitle:{defaultValue:null,description:"",name:"changeTodolistTitle",required:!0,type:{name:"(id: string, newTitle: string) => void"}},removeTodolist:{defaultValue:null,description:"",name:"removeTodolist",required:!0,type:{name:"(id: string) => void"}},demo:{defaultValue:null,description:"",name:"demo",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/features/TodolistsList/Todolist/Todolist.tsx#Todolist"]={docgenInfo:Todolist.__docgenInfo,name:"Todolist",path:"src/features/TodolistsList/Todolist/Todolist.tsx#Todolist"})}catch(__react_docgen_typescript_loader_error){}var react_router=__webpack_require__("./node_modules/react-router/index.js"),TodolistsList=function TodolistsList(_ref){var _ref$demo=_ref.demo,demo=void 0!==_ref$demo&&_ref$demo,dispatch=useAppDispatch(),todolists=useAppSelector((function(state){return state.todolists})),tasks=useAppSelector((function(state){return state.tasks})),isLoggedIn=useAppSelector((function(state){return state.login.isLoggedIn}));(0,react.useEffect)((function(){!demo&&isLoggedIn&&dispatch(function fetchTodolistsTC(){return function(dispatch){dispatch(setAppStatusAC({status:"loading"})),todolists_api.Z2.getTodolists().then((function(res){dispatch(setTodolistsAC({todolists:res.data})),dispatch(setAppStatusAC({status:"succeeded"}))})).catch((function(err){handleNetworkAppError(err,dispatch)}))}}())}),[dispatch]);var removeTask=(0,react.useCallback)((function(todolistID,id){dispatch(function removeTaskTC(todolistId,taskId){return function(dispatch){todolists_api.Z2.deleteTask(todolistId,taskId).then((function(res){dispatch(removeTaskAC({todolistId:todolistId,taskId:taskId}))})).catch((function(err){handleNetworkAppError(err,dispatch)}))}}(todolistID,id))}),[dispatch]),addTask=(0,react.useCallback)((function(todolistID,title){dispatch(function addTaskTC(todolistId,title){return function(dispatch){dispatch(setAppStatusAC({status:"loading"})),todolists_api.Z2.createTask(todolistId,title).then((function(res){0===res.data.resultCode?(dispatch(addTaskAC(res.data.data.item)),dispatch(setAppStatusAC({status:"succeeded"}))):handleServerAppError(res.data,dispatch)})).catch((function(err){handleNetworkAppError(err,dispatch)}))}}(todolistID,title))}),[dispatch]),changeTaskStatus=(0,react.useCallback)((function(todolistID,taskId,status){dispatch(updateTaskTC(todolistID,taskId,{status:status}))}),[dispatch]),changeTaskTitle=(0,react.useCallback)((function(todolistID,id,title){dispatch(updateTaskTC(todolistID,id,{title:title}))}),[dispatch]),changeFilter=(0,react.useCallback)((function(todolistId,filter){dispatch(changeTodolistFilterAC({todolistId:todolistId,filter:filter}))}),[dispatch]),removeTodolist=(0,react.useCallback)((function(todolistId){dispatch(function removeTodolistTC(todolistId){return function(dispatch){dispatch(setAppStatusAC({status:"loading"})),dispatch(changeTodolistEntityStatusAC({todolistId:todolistId,status:"loading"})),todolists_api.Z2.deleteTodolists(todolistId).then((function(res){dispatch(removeTodolistAC({todolistId:todolistId})),dispatch(setAppStatusAC({status:"succeeded"}))})).catch((function(err){handleNetworkAppError(err,dispatch)}))}}(todolistId))}),[dispatch]),changeTodolistTitle=(0,react.useCallback)((function(todolistId,title){dispatch(function changeTodolistTitleTC(todolistId,title){return function(dispatch){todolists_api.Z2.updateTodolist(todolistId,title).then((function(res){dispatch(changeTodolistTitleAC({todolistId:todolistId,title:title}))})).catch((function(err){handleNetworkAppError(err,dispatch)}))}}(todolistId,title))}),[dispatch]),addTodoList=(0,react.useCallback)((function(title){dispatch(function addTodolistTC(title){return function(dispatch){dispatch(setAppStatusAC({status:"loading"})),todolists_api.Z2.createTodolists(title).then((function(res){dispatch(addTodolistAC({todolist:res.data.data.item})),dispatch(setAppStatusAC({status:"succeeded"}))})).catch((function(err){handleNetworkAppError(err,dispatch)}))}}(title))}),[dispatch]);return isLoggedIn?(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(Grid.ZP,{style:{padding:"20px"},container:!0,children:(0,jsx_runtime.jsx)(AddItemForm.B,{addItem:addTodoList})}),(0,jsx_runtime.jsx)(Grid.ZP,{container:!0,spacing:3,children:todolists.map((function(tdl){var tasksForTodoList=tasks[tdl.id];return(0,jsx_runtime.jsx)(Grid.ZP,{item:!0,xs:12,md:6,xl:4,children:(0,jsx_runtime.jsx)(Paper.Z,{style:{padding:"10px",opacity:"80%"},elevation:3,children:(0,jsx_runtime.jsx)(Todolist,{todolist:tdl,tasks:tasksForTodoList,removeTask:removeTask,changeFilter:changeFilter,addTask:addTask,changeTaskStatus:changeTaskStatus,removeTodolist:removeTodolist,changeTaskTitle:changeTaskTitle,changeTodolistTitle:changeTodolistTitle,demo:demo},tdl.id)})})}))})]}):(0,jsx_runtime.jsx)(react_router.Fg,{to:"/login"})};try{TodolistsList.displayName="TodolistsList",TodolistsList.__docgenInfo={description:"",displayName:"TodolistsList",props:{demo:{defaultValue:{value:"false"},description:"",name:"demo",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/features/TodolistsList/TodolistsList.tsx#TodolistsList"]={docgenInfo:TodolistsList.__docgenInfo,name:"TodolistsList",path:"src/features/TodolistsList/TodolistsList.tsx#TodolistsList"})}catch(__react_docgen_typescript_loader_error){}var Snackbar=__webpack_require__("./node_modules/@mui/material/Snackbar/Snackbar.js"),Alert_Alert=__webpack_require__("./node_modules/@mui/material/Alert/Alert.js"),Alert=react.forwardRef((function Alert(props,ref){return(0,jsx_runtime.jsx)(Alert_Alert.Z,(0,objectSpread2.Z)({elevation:6,ref:ref,variant:"filled"},props))}));function ErrorSnackbar(){var error=(0,es.v9)((function(state){return state.app.error})),dispatch=(0,es.I0)(),handleClose=function handleClose(event,reason){"clickaway"!==reason&&dispatch(setAppErrorAC({error:null}))},isOpen=null!==error;return(0,jsx_runtime.jsx)(Snackbar.Z,{open:isOpen,autoHideDuration:6e3,onClose:handleClose,children:(0,jsx_runtime.jsxs)(Alert,{onClose:handleClose,severity:"error",sx:{width:"100%"},children:["Error message: ",error," 😠"]})})}var Checkbox=__webpack_require__("./node_modules/@mui/material/Checkbox/Checkbox.js"),FormControl=__webpack_require__("./node_modules/@mui/material/FormControl/FormControl.js"),FormControlLabel=__webpack_require__("./node_modules/@mui/material/FormControlLabel/FormControlLabel.js"),FormGroup=__webpack_require__("./node_modules/@mui/material/FormGroup/FormGroup.js"),FormLabel=__webpack_require__("./node_modules/@mui/material/FormLabel/FormLabel.js"),TextField=__webpack_require__("./node_modules/@mui/material/TextField/TextField.js"),formik_esm=__webpack_require__("./node_modules/formik/dist/formik.esm.js"),Login=function Login(){var dispatch=useAppDispatch(),isLoggedIn=(0,es.v9)((function(state){return state.login.isLoggedIn})),formik=(0,formik_esm.TA)({validate:function validate(values){var errors={};return values.email?/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}$/i.test(values.email)||(errors.email="Invalid email address"):errors.email="Required",values.password?values.password.length<3&&(errors.password="Password must be more 2 symbols"):errors.password="Required",errors},initialValues:{email:"",password:"",rememberMe:!1},onSubmit:function onSubmit(values){dispatch(function loginTC(params){return function(dispatch){dispatch(setAppStatusAC({status:"loading"})),todolists_api.kv.login(params).then((function(res){0===res.data.resultCode?(dispatch(setIsLoggedInAC({value:!0})),alert("login!"),dispatch(setAppStatusAC({status:"succeeded"}))):handleServerAppError(res.data,dispatch)})).catch((function(err){handleNetworkAppError(err,dispatch)}))}}(values))}});return isLoggedIn?(0,jsx_runtime.jsx)(react_router.Fg,{to:"/inc-todolist"}):(0,jsx_runtime.jsx)(Grid.ZP,{container:!0,justifyContent:"center",children:(0,jsx_runtime.jsx)(Grid.ZP,{item:!0,justifyContent:"center",children:(0,jsx_runtime.jsx)("form",{onSubmit:formik.handleSubmit,children:(0,jsx_runtime.jsxs)(FormControl.Z,{children:[(0,jsx_runtime.jsxs)(FormLabel.Z,{children:[(0,jsx_runtime.jsxs)("p",{children:["To log in get registered",(0,jsx_runtime.jsx)("a",{href:"https://social-network.samuraijs.com/",target:"_blank",rel:"noreferrer",children:" here"})]}),(0,jsx_runtime.jsx)("p",{children:"or use common test account credentials:"}),(0,jsx_runtime.jsx)("p",{children:"Email: free@samuraijs.com"}),(0,jsx_runtime.jsx)("p",{children:"Password: free"})]}),(0,jsx_runtime.jsxs)(FormGroup.Z,{children:[(0,jsx_runtime.jsx)(TextField.Z,(0,objectSpread2.Z)({type:"email",label:"Email",margin:"normal"},formik.getFieldProps("email"))),formik.errors.email?(0,jsx_runtime.jsx)("div",{style:{color:"red"},children:formik.errors.email}):null,(0,jsx_runtime.jsx)(TextField.Z,(0,objectSpread2.Z)({type:"password",label:"Password",margin:"normal"},formik.getFieldProps("password"))),formik.errors.password?(0,jsx_runtime.jsx)("div",{style:{color:"red"},children:formik.errors.password}):null,(0,jsx_runtime.jsx)(FormControlLabel.Z,{label:"Remember me",control:(0,jsx_runtime.jsx)(Checkbox.Z,(0,objectSpread2.Z)((0,objectSpread2.Z)({},formik.getFieldProps("rememberMe")),{},{checked:formik.values.rememberMe}))}),(0,jsx_runtime.jsx)(Button.Z,{type:"submit",variant:"contained",color:"primary",children:"Login"})]})]})})})})};function App(_ref){var _ref$demo=_ref.demo,demo=void 0!==_ref$demo&&_ref$demo;console.log("App is called");var status=(0,es.v9)((function(state){return state.app.status})),initialized=(0,es.v9)((function(state){return state.app.isInitialized})),isLoggedIn=(0,es.v9)((function(state){return state.login.isLoggedIn})),dispatch=useAppDispatch();(0,react.useEffect)((function(){demo||dispatch(function initializaAppTC(){return function(dispatch){todolists_api.kv.me().then((function(res){0===res.data.resultCode&&dispatch(setIsLoggedInAC({value:!0})),dispatch(setAppInitializedAC({value:!0}))}))}}())}),[dispatch]);var logOutHandler=(0,react.useCallback)((function(){dispatch(function logOutTC(){return function(dispatch){dispatch(setAppStatusAC({status:"loading"})),todolists_api.kv.logOut().then((function(res){0===res.data.resultCode?(dispatch(setIsLoggedInAC({value:!1})),dispatch(setAppStatusAC({status:"succeeded"}))):handleServerAppError(res.data,dispatch)})).catch((function(err){handleNetworkAppError(err,dispatch)}))}}())}),[dispatch]);return initialized?(0,jsx_runtime.jsxs)("div",{className:"App",children:[(0,jsx_runtime.jsx)(ErrorSnackbar,{}),(0,jsx_runtime.jsxs)(AppBar.Z,{style:{background:"black",opacity:"50%",position:"sticky"},children:[(0,jsx_runtime.jsxs)(Toolbar.Z,{children:[(0,jsx_runtime.jsx)("h1",{style:{fontSize:"50px",margin:"0 50px 0"},children:"TodoList"}),(0,jsx_runtime.jsx)(Typography.Z,{variant:"h6",component:"div",sx:{flexGrow:1}}),isLoggedIn&&(0,jsx_runtime.jsx)(Button.Z,{onClick:logOutHandler,color:"inherit",children:"Log out"})]}),"loading"===status&&(0,jsx_runtime.jsx)(LinearProgress.Z,{})]}),(0,jsx_runtime.jsx)(Container.Z,{fixed:!0,children:(0,jsx_runtime.jsxs)(react_router.Z5,{children:[(0,jsx_runtime.jsx)(react_router.AW,{path:"/inc-todolist",element:(0,jsx_runtime.jsx)(TodolistsList,{demo:demo})}),(0,jsx_runtime.jsx)(react_router.AW,{path:"/login",element:(0,jsx_runtime.jsx)(Login,{})}),(0,jsx_runtime.jsx)(react_router.AW,{path:"/404",element:(0,jsx_runtime.jsx)("h1",{children:"404: PAGE NOT FOUND"})}),(0,jsx_runtime.jsx)(react_router.AW,{path:"*",element:(0,jsx_runtime.jsx)(react_router.Fg,{to:"/404"})})]})})]}):(0,jsx_runtime.jsx)("div",{style:{position:"fixed",top:"30%",textAlign:"center",width:"100%"},children:(0,jsx_runtime.jsx)(CircularProgress.Z,{})})}var App_App=App;try{App.displayName="App",App.__docgenInfo={description:"",displayName:"App",props:{demo:{defaultValue:{value:"false"},description:"",name:"demo",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/App/App.tsx#App"]={docgenInfo:App.__docgenInfo,name:"App",path:"src/App/App.tsx#App"})}catch(__react_docgen_typescript_loader_error){}var redux=__webpack_require__("./node_modules/redux/es/redux.js"),redux_thunk_es=__webpack_require__("./node_modules/redux-thunk/es/index.js"),react_router_dom=__webpack_require__("./node_modules/react-router-dom/index.js"),rootRedcer=(0,redux.UY)({todolists:todolistReducer,tasks:taskReducer,app:appReducer,login:authReducer}),initialGlobalState={todolists:[{id:"todolistID1",title:"What to learn",filter:"all",addedData:"",order:0,entityStatus:"idle"},{id:"todolistID2",title:"What to buy",filter:"all",addedData:"",order:0,entityStatus:"loading"}],tasks:{todolistID1:[{id:"1",title:"CSS",status:todolists_api.Fm.Completed,todoListId:"todolistID1",description:"",startDate:"",deadline:"",addedDate:"",order:0,priority:todolists_api.xy.Low},{id:"2",title:"JS",status:todolists_api.Fm.Completed,todoListId:"todolistID1",description:"",startDate:"",deadline:"",addedDate:"",order:0,priority:todolists_api.xy.Low}],todolistID2:[{id:"1",title:"bread",status:todolists_api.Fm.Completed,todoListId:"todolistID2",description:"",startDate:"",deadline:"",addedDate:"",order:0,priority:todolists_api.xy.Low},{id:"2",title:"milk",status:todolists_api.Fm.Completed,todoListId:"todolistID2",description:"",startDate:"",deadline:"",addedDate:"",order:0,priority:todolists_api.xy.Low}]},app:{error:null,status:"succeeded",isInitialized:!0},login:{isLoggedIn:!0}},storyBookStore=(0,redux_toolkit_esm.xC)({reducer:rootRedcer,preloadedState:initialGlobalState,middleware:function middleware(getDefaultMiddleware){return getDefaultMiddleware().prepend(redux_thunk_es.Z)}}),ReduxStoreProviderDecorator=function ReduxStoreProviderDecorator(storyFn){return(0,jsx_runtime.jsxs)(es.zt,{store:storyBookStore,children:[" ",storyFn()]})},BrowserRouterDecorator=function BrowserRouterDecorator(storyFn){return(0,jsx_runtime.jsxs)(react_router_dom.UT,{children:[" ",storyFn()]})};try{ReduxStoreProviderDecorator.displayName="ReduxStoreProviderDecorator",ReduxStoreProviderDecorator.__docgenInfo={description:"",displayName:"ReduxStoreProviderDecorator",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/decorators/ReduxStoreProviderDecorator.tsx#ReduxStoreProviderDecorator"]={docgenInfo:ReduxStoreProviderDecorator.__docgenInfo,name:"ReduxStoreProviderDecorator",path:"src/stories/decorators/ReduxStoreProviderDecorator.tsx#ReduxStoreProviderDecorator"})}catch(__react_docgen_typescript_loader_error){}try{BrowserRouterDecorator.displayName="BrowserRouterDecorator",BrowserRouterDecorator.__docgenInfo={description:"",displayName:"BrowserRouterDecorator",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/decorators/ReduxStoreProviderDecorator.tsx#BrowserRouterDecorator"]={docgenInfo:BrowserRouterDecorator.__docgenInfo,name:"BrowserRouterDecorator",path:"src/stories/decorators/ReduxStoreProviderDecorator.tsx#BrowserRouterDecorator"})}catch(__react_docgen_typescript_loader_error){}var App_stories={parameters:(0,defineProperty.Z)({storySource:{source:'\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = "import React from \\"react\\";\\nimport App from \\"./App\\";\\nimport {BrowserRouterDecorator, ReduxStoreProviderDecorator} from \\"../stories/decorators/ReduxStoreProviderDecorator\\";\\n\\n\\nexport default {\\n    title: \'App Component\',\\n    component: App,\\n    decorators: [ReduxStoreProviderDecorator, BrowserRouterDecorator]\\n}\\n\\n// const changeCallBack = action(\\"Value changed\\")\\n\\nexport const AppBaseExample = () => {\\n    return <App demo={true} />\\n}";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {"AppBaseExample":{"startLoc":{"col":30,"line":14},"endLoc":{"col":1,"line":16},"startBody":{"col":30,"line":14},"endBody":{"col":1,"line":16}}};\n    \nimport React from "react";\nimport App from "./App";\nimport {BrowserRouterDecorator, ReduxStoreProviderDecorator} from "../stories/decorators/ReduxStoreProviderDecorator";\n\n\nexport default {parameters: {"storySource":{"source":"import React from \\"react\\";\\nimport App from \\"./App\\";\\nimport {BrowserRouterDecorator, ReduxStoreProviderDecorator} from \\"../stories/decorators/ReduxStoreProviderDecorator\\";\\n\\n\\nexport default {\\n    title: \'App Component\',\\n    component: App,\\n    decorators: [ReduxStoreProviderDecorator, BrowserRouterDecorator]\\n}\\n\\n// const changeCallBack = action(\\"Value changed\\")\\n\\nexport const AppBaseExample = () => {\\n    return <App demo={true} />\\n}","locationsMap":{"app-base-example":{"startLoc":{"col":30,"line":14},"endLoc":{"col":1,"line":16},"startBody":{"col":30,"line":14},"endBody":{"col":1,"line":16}}}},},\n    title: \'App Component\',\n    component: App,\n    decorators: [ReduxStoreProviderDecorator, BrowserRouterDecorator]\n}\n\n// const changeCallBack = action("Value changed")\n\nexport const AppBaseExample = () => {\n    return <App demo={true} />\n};',locationsMap:{"app-base-example":{startLoc:{col:30,line:22},endLoc:{col:1,line:24},startBody:{col:30,line:22},endBody:{col:1,line:24}}}}},"storySource",{source:'import React from "react";\nimport App from "./App";\nimport {BrowserRouterDecorator, ReduxStoreProviderDecorator} from "../stories/decorators/ReduxStoreProviderDecorator";\n\n\nexport default {\n    title: \'App Component\',\n    component: App,\n    decorators: [ReduxStoreProviderDecorator, BrowserRouterDecorator]\n}\n\n// const changeCallBack = action("Value changed")\n\nexport const AppBaseExample = () => {\n    return <App demo={true} />\n}',locationsMap:{"app-base-example":{startLoc:{col:30,line:14},endLoc:{col:1,line:16},startBody:{col:30,line:14},endBody:{col:1,line:16}}}}),title:"App Component",component:App_App,decorators:[ReduxStoreProviderDecorator,BrowserRouterDecorator]},AppBaseExample=function AppBaseExample(){return(0,jsx_runtime.jsx)(App_App,{demo:!0})},__namedExportsOrder=["AppBaseExample"]},"./src/components/AddItemForm/AddItemForm.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AddItemFormBaseExample:function(){return AddItemFormBaseExample},AddItemFormDisableAdd:function(){return AddItemFormDisableAdd},__namedExportsOrder:function(){return __namedExportsOrder}});var _home_msa_ReactSamurai_it_inc_todolist_it_inc_todolist_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/defineProperty.js"),_AddItemForm__WEBPACK_IMPORTED_MODULE_1__=(__webpack_require__("./node_modules/react/index.js"),__webpack_require__("./src/components/AddItemForm/AddItemForm.tsx")),_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/esm/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react/jsx-runtime.js");__webpack_exports__.default={parameters:(0,_home_msa_ReactSamurai_it_inc_todolist_it_inc_todolist_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_4__.Z)({storySource:{source:'\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = "import React from \\"react\\";\\nimport {AddItemForm} from \\"./AddItemForm\\";\\nimport {action} from \\"@storybook/addon-actions\\";\\n\\nexport  default {\\n    title: \'AddItemForm Component\',\\n    component: AddItemForm,\\n}\\n\\nconst callback = action(\\"Button \'add\' was pressed inside form\\")\\n\\nexport const AddItemFormBaseExample = (props: any) => {\\n     return <AddItemForm addItem={callback} />\\n}\\n\\nexport const AddItemFormDisableAdd = (props: any) => {\\n     return <AddItemForm disabled={true} addItem={callback} />\\n}\\n";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {"AddItemFormBaseExample":{"startLoc":{"col":38,"line":12},"endLoc":{"col":1,"line":14},"startBody":{"col":38,"line":12},"endBody":{"col":1,"line":14}},"AddItemFormDisableAdd":{"startLoc":{"col":37,"line":16},"endLoc":{"col":1,"line":18},"startBody":{"col":37,"line":16},"endBody":{"col":1,"line":18}}};\n    \nimport React from "react";\nimport {AddItemForm} from "./AddItemForm";\nimport {action} from "@storybook/addon-actions";\n\nexport  default {parameters: {"storySource":{"source":"import React from \\"react\\";\\nimport {AddItemForm} from \\"./AddItemForm\\";\\nimport {action} from \\"@storybook/addon-actions\\";\\n\\nexport  default {\\n    title: \'AddItemForm Component\',\\n    component: AddItemForm,\\n}\\n\\nconst callback = action(\\"Button \'add\' was pressed inside form\\")\\n\\nexport const AddItemFormBaseExample = (props: any) => {\\n     return <AddItemForm addItem={callback} />\\n}\\n\\nexport const AddItemFormDisableAdd = (props: any) => {\\n     return <AddItemForm disabled={true} addItem={callback} />\\n}\\n","locationsMap":{"add-item-form-base-example":{"startLoc":{"col":38,"line":12},"endLoc":{"col":1,"line":14},"startBody":{"col":38,"line":12},"endBody":{"col":1,"line":14}},"add-item-form-disable-add":{"startLoc":{"col":37,"line":16},"endLoc":{"col":1,"line":18},"startBody":{"col":37,"line":16},"endBody":{"col":1,"line":18}}}},},\n    title: \'AddItemForm Component\',\n    component: AddItemForm,\n}\n\nconst callback = action("Button \'add\' was pressed inside form")\n\nexport const AddItemFormBaseExample = (props: any) => {\n     return <AddItemForm addItem={callback} />\n};\n\nexport const AddItemFormDisableAdd = (props: any) => {\n     return <AddItemForm disabled={true} addItem={callback} />\n};',locationsMap:{"add-item-form-base-example":{startLoc:{col:38,line:20},endLoc:{col:1,line:22},startBody:{col:38,line:20},endBody:{col:1,line:22}},"add-item-form-disable-add":{startLoc:{col:37,line:24},endLoc:{col:1,line:26},startBody:{col:37,line:24},endBody:{col:1,line:26}}}}},"storySource",{source:'import React from "react";\nimport {AddItemForm} from "./AddItemForm";\nimport {action} from "@storybook/addon-actions";\n\nexport  default {\n    title: \'AddItemForm Component\',\n    component: AddItemForm,\n}\n\nconst callback = action("Button \'add\' was pressed inside form")\n\nexport const AddItemFormBaseExample = (props: any) => {\n     return <AddItemForm addItem={callback} />\n}\n\nexport const AddItemFormDisableAdd = (props: any) => {\n     return <AddItemForm disabled={true} addItem={callback} />\n}\n',locationsMap:{"add-item-form-base-example":{startLoc:{col:38,line:12},endLoc:{col:1,line:14},startBody:{col:38,line:12},endBody:{col:1,line:14}},"add-item-form-disable-add":{startLoc:{col:37,line:16},endLoc:{col:1,line:18},startBody:{col:37,line:16},endBody:{col:1,line:18}}}}),title:"AddItemForm Component",component:_AddItemForm__WEBPACK_IMPORTED_MODULE_1__.B};var callback=(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.action)("Button 'add' was pressed inside form"),AddItemFormBaseExample=function AddItemFormBaseExample(props){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_AddItemForm__WEBPACK_IMPORTED_MODULE_1__.B,{addItem:callback})},AddItemFormDisableAdd=function AddItemFormDisableAdd(props){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_AddItemForm__WEBPACK_IMPORTED_MODULE_1__.B,{disabled:!0,addItem:callback})},__namedExportsOrder=["AddItemFormBaseExample","AddItemFormDisableAdd"];try{AddItemFormBaseExample.displayName="AddItemFormBaseExample",AddItemFormBaseExample.__docgenInfo={description:"",displayName:"AddItemFormBaseExample",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/AddItemForm/AddItemForm.stories.tsx#AddItemFormBaseExample"]={docgenInfo:AddItemFormBaseExample.__docgenInfo,name:"AddItemFormBaseExample",path:"src/components/AddItemForm/AddItemForm.stories.tsx#AddItemFormBaseExample"})}catch(__react_docgen_typescript_loader_error){}try{AddItemFormDisableAdd.displayName="AddItemFormDisableAdd",AddItemFormDisableAdd.__docgenInfo={description:"",displayName:"AddItemFormDisableAdd",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/AddItemForm/AddItemForm.stories.tsx#AddItemFormDisableAdd"]={docgenInfo:AddItemFormDisableAdd.__docgenInfo,name:"AddItemFormDisableAdd",path:"src/components/AddItemForm/AddItemForm.stories.tsx#AddItemFormDisableAdd"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/EditableSpan/EditableSpan.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{EditableSpanBaseExample:function(){return EditableSpanBaseExample},EditableSpanDisabled:function(){return EditableSpanDisabled},__namedExportsOrder:function(){return __namedExportsOrder}});var _home_msa_ReactSamurai_it_inc_todolist_it_inc_todolist_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/defineProperty.js"),_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__=(__webpack_require__("./node_modules/react/index.js"),__webpack_require__("./node_modules/@storybook/addon-actions/dist/esm/index.js")),_EditableSpan__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/EditableSpan/EditableSpan.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react/jsx-runtime.js");__webpack_exports__.default={parameters:(0,_home_msa_ReactSamurai_it_inc_todolist_it_inc_todolist_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_4__.Z)({storySource:{source:'\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = "import React from \\"react\\";\\nimport {action} from \\"@storybook/addon-actions\\";\\n\\nimport {EditableSpan} from \\"./EditableSpan\\";\\n\\nexport default {\\n    title: \'EditableSpan Component\',\\n    component: EditableSpan,\\n}\\n\\n\\nconst changeCallBack = action(\\"Value changed\\")\\n\\n\\nexport const EditableSpanBaseExample = (props: any) => {\\n    return <EditableSpan  onChange={changeCallBack} title={\\"EditableSpan\\"}/>\\n}\\nexport const EditableSpanDisabled = (props: any) => {\\n    return <EditableSpan  onChange={changeCallBack} title={\\"EditableSpan\\"}/>\\n}";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {"EditableSpanBaseExample":{"startLoc":{"col":39,"line":15},"endLoc":{"col":1,"line":17},"startBody":{"col":39,"line":15},"endBody":{"col":1,"line":17}},"EditableSpanDisabled":{"startLoc":{"col":36,"line":18},"endLoc":{"col":1,"line":20},"startBody":{"col":36,"line":18},"endBody":{"col":1,"line":20}}};\n    \nimport React from "react";\nimport {action} from "@storybook/addon-actions";\n\nimport {EditableSpan} from "./EditableSpan";\n\nexport default {parameters: {"storySource":{"source":"import React from \\"react\\";\\nimport {action} from \\"@storybook/addon-actions\\";\\n\\nimport {EditableSpan} from \\"./EditableSpan\\";\\n\\nexport default {\\n    title: \'EditableSpan Component\',\\n    component: EditableSpan,\\n}\\n\\n\\nconst changeCallBack = action(\\"Value changed\\")\\n\\n\\nexport const EditableSpanBaseExample = (props: any) => {\\n    return <EditableSpan  onChange={changeCallBack} title={\\"EditableSpan\\"}/>\\n}\\nexport const EditableSpanDisabled = (props: any) => {\\n    return <EditableSpan  onChange={changeCallBack} title={\\"EditableSpan\\"}/>\\n}","locationsMap":{"editable-span-base-example":{"startLoc":{"col":39,"line":15},"endLoc":{"col":1,"line":17},"startBody":{"col":39,"line":15},"endBody":{"col":1,"line":17}},"editable-span-disabled":{"startLoc":{"col":36,"line":18},"endLoc":{"col":1,"line":20},"startBody":{"col":36,"line":18},"endBody":{"col":1,"line":20}}}},},\n    title: \'EditableSpan Component\',\n    component: EditableSpan,\n}\n\n\nconst changeCallBack = action("Value changed")\n\n\nexport const EditableSpanBaseExample = (props: any) => {\n    return <EditableSpan  onChange={changeCallBack} title={"EditableSpan"}/>\n};\nexport const EditableSpanDisabled = (props: any) => {\n    return <EditableSpan  onChange={changeCallBack} title={"EditableSpan"}/>\n};',locationsMap:{"editable-span-base-example":{startLoc:{col:39,line:23},endLoc:{col:1,line:25},startBody:{col:39,line:23},endBody:{col:1,line:25}},"editable-span-disabled":{startLoc:{col:36,line:26},endLoc:{col:1,line:28},startBody:{col:36,line:26},endBody:{col:1,line:28}}}}},"storySource",{source:'import React from "react";\nimport {action} from "@storybook/addon-actions";\n\nimport {EditableSpan} from "./EditableSpan";\n\nexport default {\n    title: \'EditableSpan Component\',\n    component: EditableSpan,\n}\n\n\nconst changeCallBack = action("Value changed")\n\n\nexport const EditableSpanBaseExample = (props: any) => {\n    return <EditableSpan  onChange={changeCallBack} title={"EditableSpan"}/>\n}\nexport const EditableSpanDisabled = (props: any) => {\n    return <EditableSpan  onChange={changeCallBack} title={"EditableSpan"}/>\n}',locationsMap:{"editable-span-base-example":{startLoc:{col:39,line:15},endLoc:{col:1,line:17},startBody:{col:39,line:15},endBody:{col:1,line:17}},"editable-span-disabled":{startLoc:{col:36,line:18},endLoc:{col:1,line:20},startBody:{col:36,line:18},endBody:{col:1,line:20}}}}),title:"EditableSpan Component",component:_EditableSpan__WEBPACK_IMPORTED_MODULE_2__.m};var changeCallBack=(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.action)("Value changed"),EditableSpanBaseExample=function EditableSpanBaseExample(props){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_EditableSpan__WEBPACK_IMPORTED_MODULE_2__.m,{onChange:changeCallBack,title:"EditableSpan"})},EditableSpanDisabled=function EditableSpanDisabled(props){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_EditableSpan__WEBPACK_IMPORTED_MODULE_2__.m,{onChange:changeCallBack,title:"EditableSpan"})},__namedExportsOrder=["EditableSpanBaseExample","EditableSpanDisabled"];try{EditableSpanBaseExample.displayName="EditableSpanBaseExample",EditableSpanBaseExample.__docgenInfo={description:"",displayName:"EditableSpanBaseExample",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/EditableSpan/EditableSpan.stories.tsx#EditableSpanBaseExample"]={docgenInfo:EditableSpanBaseExample.__docgenInfo,name:"EditableSpanBaseExample",path:"src/components/EditableSpan/EditableSpan.stories.tsx#EditableSpanBaseExample"})}catch(__react_docgen_typescript_loader_error){}try{EditableSpanDisabled.displayName="EditableSpanDisabled",EditableSpanDisabled.__docgenInfo={description:"",displayName:"EditableSpanDisabled",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/EditableSpan/EditableSpan.stories.tsx#EditableSpanDisabled"]={docgenInfo:EditableSpanDisabled.__docgenInfo,name:"EditableSpanDisabled",path:"src/components/EditableSpan/EditableSpan.stories.tsx#EditableSpanDisabled"})}catch(__react_docgen_typescript_loader_error){}},"./src/features/TodolistsList/Todolist/Task/Task.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{TaskBaseExample:function(){return TaskBaseExample},__namedExportsOrder:function(){return __namedExportsOrder}});var _home_msa_ReactSamurai_it_inc_todolist_it_inc_todolist_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/defineProperty.js"),_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__=(__webpack_require__("./node_modules/react/index.js"),__webpack_require__("./node_modules/@storybook/addon-actions/dist/esm/index.js")),_Task__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/features/TodolistsList/Todolist/Task/Task.tsx"),_api_todolists_api__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/api/todolists-api.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/react/jsx-runtime.js");__webpack_exports__.default={parameters:(0,_home_msa_ReactSamurai_it_inc_todolist_it_inc_todolist_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_5__.Z)({storySource:{source:'\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = "import React from \\"react\\";\\nimport {action} from \\"@storybook/addon-actions\\";\\nimport {Task} from \\"./Task\\";\\nimport {TaskPriorities, TaskStatuses} from \\"../../../../api/todolists-api\\";\\n\\nexport default {\\n    title: \'Task Component\',\\n    component: Task,\\n}\\n\\n//const callback = action(\\"Button \'add\' was pressed inside form\\")\\nconst changeTaskStatusCallBack = action(\\"Status changed\\")\\nconst changeTaskTitleCallBack = action(\\"Title changed\\")\\nconst removeTaskCallBack = action(\\"Task was removed\\")\\n\\n\\nexport const TaskBaseExample = (props: any) => {\\n    return <>\\n        <Task changeTaskStatus={changeTaskStatusCallBack}\\n              changeTaskTitle={changeTaskTitleCallBack}\\n              removeTask={removeTaskCallBack}\\n              task={{id: \'1\', status: TaskStatuses.Completed, title: \\"css\\", todoListId: \\"todolistID1\\", description: \'\',\\n                  startDate: \'\', deadline: \'\', addedDate: \'\', order: 0, priority: TaskPriorities.Low}}\\n              todolistId={\\"todolistId1\\"}\\n        />\\n        <Task changeTaskStatus={changeTaskStatusCallBack}\\n              changeTaskTitle={changeTaskTitleCallBack}\\n              removeTask={removeTaskCallBack}\\n              task={{id: \'2\', status: TaskStatuses.New, title: \\"html\\", todoListId: \\"todolistID2\\", description: \'\',\\n                  startDate: \'\', deadline: \'\', addedDate: \'\', order: 0, priority: TaskPriorities.Low}}\\n              todolistId={\'todolistId1\'}\\n        />\\n    </>\\n}";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {"TaskBaseExample":{"startLoc":{"col":31,"line":17},"endLoc":{"col":1,"line":34},"startBody":{"col":31,"line":17},"endBody":{"col":1,"line":34}}};\n    \nimport React from "react";\nimport {action} from "@storybook/addon-actions";\nimport {Task} from "./Task";\nimport {TaskPriorities, TaskStatuses} from "../../../../api/todolists-api";\n\nexport default {parameters: {"storySource":{"source":"import React from \\"react\\";\\nimport {action} from \\"@storybook/addon-actions\\";\\nimport {Task} from \\"./Task\\";\\nimport {TaskPriorities, TaskStatuses} from \\"../../../../api/todolists-api\\";\\n\\nexport default {\\n    title: \'Task Component\',\\n    component: Task,\\n}\\n\\n//const callback = action(\\"Button \'add\' was pressed inside form\\")\\nconst changeTaskStatusCallBack = action(\\"Status changed\\")\\nconst changeTaskTitleCallBack = action(\\"Title changed\\")\\nconst removeTaskCallBack = action(\\"Task was removed\\")\\n\\n\\nexport const TaskBaseExample = (props: any) => {\\n    return <>\\n        <Task changeTaskStatus={changeTaskStatusCallBack}\\n              changeTaskTitle={changeTaskTitleCallBack}\\n              removeTask={removeTaskCallBack}\\n              task={{id: \'1\', status: TaskStatuses.Completed, title: \\"css\\", todoListId: \\"todolistID1\\", description: \'\',\\n                  startDate: \'\', deadline: \'\', addedDate: \'\', order: 0, priority: TaskPriorities.Low}}\\n              todolistId={\\"todolistId1\\"}\\n        />\\n        <Task changeTaskStatus={changeTaskStatusCallBack}\\n              changeTaskTitle={changeTaskTitleCallBack}\\n              removeTask={removeTaskCallBack}\\n              task={{id: \'2\', status: TaskStatuses.New, title: \\"html\\", todoListId: \\"todolistID2\\", description: \'\',\\n                  startDate: \'\', deadline: \'\', addedDate: \'\', order: 0, priority: TaskPriorities.Low}}\\n              todolistId={\'todolistId1\'}\\n        />\\n    </>\\n}","locationsMap":{"task-base-example":{"startLoc":{"col":31,"line":17},"endLoc":{"col":1,"line":34},"startBody":{"col":31,"line":17},"endBody":{"col":1,"line":34}}}},},\n    title: \'Task Component\',\n    component: Task,\n}\n\n//const callback = action("Button \'add\' was pressed inside form")\nconst changeTaskStatusCallBack = action("Status changed")\nconst changeTaskTitleCallBack = action("Title changed")\nconst removeTaskCallBack = action("Task was removed")\n\n\nexport const TaskBaseExample = (props: any) => {\n    return <>\n        <Task changeTaskStatus={changeTaskStatusCallBack}\n              changeTaskTitle={changeTaskTitleCallBack}\n              removeTask={removeTaskCallBack}\n              task={{id: \'1\', status: TaskStatuses.Completed, title: "css", todoListId: "todolistID1", description: \'\',\n                  startDate: \'\', deadline: \'\', addedDate: \'\', order: 0, priority: TaskPriorities.Low}}\n              todolistId={"todolistId1"}\n        />\n        <Task changeTaskStatus={changeTaskStatusCallBack}\n              changeTaskTitle={changeTaskTitleCallBack}\n              removeTask={removeTaskCallBack}\n              task={{id: \'2\', status: TaskStatuses.New, title: "html", todoListId: "todolistID2", description: \'\',\n                  startDate: \'\', deadline: \'\', addedDate: \'\', order: 0, priority: TaskPriorities.Low}}\n              todolistId={\'todolistId1\'}\n        />\n    </>\n};',locationsMap:{"task-base-example":{startLoc:{col:31,line:25},endLoc:{col:1,line:42},startBody:{col:31,line:25},endBody:{col:1,line:42}}}}},"storySource",{source:"import React from \"react\";\nimport {action} from \"@storybook/addon-actions\";\nimport {Task} from \"./Task\";\nimport {TaskPriorities, TaskStatuses} from \"../../../../api/todolists-api\";\n\nexport default {\n    title: 'Task Component',\n    component: Task,\n}\n\n//const callback = action(\"Button 'add' was pressed inside form\")\nconst changeTaskStatusCallBack = action(\"Status changed\")\nconst changeTaskTitleCallBack = action(\"Title changed\")\nconst removeTaskCallBack = action(\"Task was removed\")\n\n\nexport const TaskBaseExample = (props: any) => {\n    return <>\n        <Task changeTaskStatus={changeTaskStatusCallBack}\n              changeTaskTitle={changeTaskTitleCallBack}\n              removeTask={removeTaskCallBack}\n              task={{id: '1', status: TaskStatuses.Completed, title: \"css\", todoListId: \"todolistID1\", description: '',\n                  startDate: '', deadline: '', addedDate: '', order: 0, priority: TaskPriorities.Low}}\n              todolistId={\"todolistId1\"}\n        />\n        <Task changeTaskStatus={changeTaskStatusCallBack}\n              changeTaskTitle={changeTaskTitleCallBack}\n              removeTask={removeTaskCallBack}\n              task={{id: '2', status: TaskStatuses.New, title: \"html\", todoListId: \"todolistID2\", description: '',\n                  startDate: '', deadline: '', addedDate: '', order: 0, priority: TaskPriorities.Low}}\n              todolistId={'todolistId1'}\n        />\n    </>\n}",locationsMap:{"task-base-example":{startLoc:{col:31,line:17},endLoc:{col:1,line:34},startBody:{col:31,line:17},endBody:{col:1,line:34}}}}),title:"Task Component",component:_Task__WEBPACK_IMPORTED_MODULE_2__.i};var changeTaskStatusCallBack=(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.action)("Status changed"),changeTaskTitleCallBack=(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.action)("Title changed"),removeTaskCallBack=(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.action)("Task was removed"),TaskBaseExample=function TaskBaseExample(props){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_Task__WEBPACK_IMPORTED_MODULE_2__.i,{changeTaskStatus:changeTaskStatusCallBack,changeTaskTitle:changeTaskTitleCallBack,removeTask:removeTaskCallBack,task:{id:"1",status:_api_todolists_api__WEBPACK_IMPORTED_MODULE_3__.Fm.Completed,title:"css",todoListId:"todolistID1",description:"",startDate:"",deadline:"",addedDate:"",order:0,priority:_api_todolists_api__WEBPACK_IMPORTED_MODULE_3__.xy.Low},todolistId:"todolistId1"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_Task__WEBPACK_IMPORTED_MODULE_2__.i,{changeTaskStatus:changeTaskStatusCallBack,changeTaskTitle:changeTaskTitleCallBack,removeTask:removeTaskCallBack,task:{id:"2",status:_api_todolists_api__WEBPACK_IMPORTED_MODULE_3__.Fm.New,title:"html",todoListId:"todolistID2",description:"",startDate:"",deadline:"",addedDate:"",order:0,priority:_api_todolists_api__WEBPACK_IMPORTED_MODULE_3__.xy.Low},todolistId:"todolistId1"})]})},__namedExportsOrder=["TaskBaseExample"];try{TaskBaseExample.displayName="TaskBaseExample",TaskBaseExample.__docgenInfo={description:"",displayName:"TaskBaseExample",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/features/TodolistsList/Todolist/Task/Task.stories.tsx#TaskBaseExample"]={docgenInfo:TaskBaseExample.__docgenInfo,name:"TaskBaseExample",path:"src/features/TodolistsList/Todolist/Task/Task.stories.tsx#TaskBaseExample"})}catch(__react_docgen_typescript_loader_error){}},"./src/stories/todolists-api.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CreateTask:function(){return CreateTask},CreateTodolist:function(){return CreateTodolist},DeleteTask:function(){return DeleteTask},DeleteTodolist:function(){return DeleteTodolist},GetTasks:function(){return GetTasks},GetTodolists:function(){return GetTodolists},UpdateTask:function(){return UpdateTask},UpdateTodolistTitle:function(){return UpdateTodolistTitle},__namedExportsOrder:function(){return __namedExportsOrder}});var _home_msa_ReactSamurai_it_inc_todolist_it_inc_todolist_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),_home_msa_ReactSamurai_it_inc_todolist_it_inc_todolist_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/defineProperty.js"),react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_api_todolists_api__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/api/todolists-api.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");__webpack_exports__.default={parameters:(0,_home_msa_ReactSamurai_it_inc_todolist_it_inc_todolist_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_3__.Z)({storySource:{source:'\n    \n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = "import React, {useEffect, useState} from \'react\'\\nimport {todolistsAPI} from \\"../api/todolists-api\\";\\n\\nexport default {\\n    title: \'API\'\\n}\\n\\nexport const GetTodolists = () => {\\n    const [state, setState] = useState<any>(null)\\n    useEffect(() => {\\n        // здесь мы будем делать запрос и ответ закидывать в стейт.\\n        // который в виде строки будем отображать в div-ке\\n        todolistsAPI.getTodolists()\\n            .then((res)=> {\\n                setState(res.data)\\n            })\\n\\n    }, [])\\n    return <div>{JSON.stringify(state)}</div>\\n}\\nexport const CreateTodolist = () => {\\n    const [state, setState] = useState<any>(null)\\n    useEffect(() => {\\n        todolistsAPI.createTodolists(\\"MEGA_List\\")\\n            .then((res) => {\\n                setState(res.data)\\n            })\\n    }, [])\\n    return <div>{JSON.stringify(state)}</div>\\n}\\nexport const UpdateTodolistTitle = () => {\\n    const [state, setState] = useState<any>(null)\\n    useEffect(() => {\\n        const todolistId = \'b2b5c8b4-5c7a-4727-ac22-c3eeb40305f1\'\\n        todolistsAPI.updateTodolist(todolistId, \\"MEGA-UPDATE\\")\\n            .then((res) => {\\n                console.log(res.status)\\n                setState(res.data)\\n            })\\n\\n    }, [])\\n    return <div>{JSON.stringify(state)}</div>\\n}\\nexport const DeleteTodolist = () => {\\n    const [state, setState] = useState<any>(null)\\n    useEffect(() => {\\n        const todolistId = \'8b21800d-9b2f-42d1-a209-5e2deb8bd90c\';\\n        todolistsAPI.deleteTodolists(todolistId)\\n            .then((res) => {\\n                console.log(res.status)\\n                setState(res.data)\\n            })\\n    }, [])\\n    return <div>{JSON.stringify(state)}</div>\\n}\\n\\n\\nexport const GetTasks = () => {\\n    const [state, setState] = useState<any>(null)\\n    const [todolistId, setTodolistId] = useState<any>(null)\\n    const getTasks = () => {\\n        // здесь мы будем делать запрос и ответ закидывать в стейт.\\n        // который в виде строки будем отображать в div-ке\\n        todolistsAPI.getTasks(todolistId)\\n            .then((res)=> {\\n                setState(res.data.items)\\n            })\\n    }\\n    return <div>{JSON.stringify(state)}\\n        <div>\\n            <input placeholder=\\"todolistId\\" value={todolistId}\\n                   onChange={(e)=>{setTodolistId(e.currentTarget.value)}} />\\n            <button onClick={getTasks}>Get Task</button>\\n        </div>\\n    </div>\\n}\\nexport const CreateTask = () => {\\n    const [state, setState] = useState<any>(null)\\n    const [taskTitle, setTaskTitle] = useState<any>(null)\\n    const [todolistId, setTodolistId] = useState<any>(null)\\n    const createTask = () => {\\n        todolistsAPI.createTask(todolistId, taskTitle)\\n            .then((res) => {\\n                setState(res.data)\\n            })\\n    }\\n    return <div>{JSON.stringify(state)}\\n    <div>\\n        <input placeholder=\\"todolistId\\" value={todolistId}\\n        onChange={(e)=>{setTodolistId(e.currentTarget.value)}} />\\n        <input placeholder=\\"TaskTitle\\" value={taskTitle}\\n        onChange={(e)=>{setTaskTitle(e.currentTarget.value)}} />\\n        <button onClick={createTask}>Create Task</button>\\n    </div>\\n    </div>\\n}\\nexport const UpdateTask = () => {\\n    const [state, setState] = useState<any>(null)\\n    const [title, setTitle] = useState<string>(\'MyTask\')\\n    const [todolistId, setTodolistId] = useState<string>(\'\')\\n    const [taskId, setTaskId] = useState<string>(\'\')\\n    const [description, setDescription] = useState<string>(\'MyTaskDescription\')\\n    const [status, setStatus] = useState<number>(0)\\n    const [priority, setPriority] = useState<number>(0)\\n    const [startData, setStartData] = useState<string>(\'\')\\n    const [deadLine, setDeadLine] = useState<string>(\'\')\\n    const createTask = () => {\\n        todolistsAPI.updateTask(todolistId, taskId, {\\n            deadline: deadLine,\\n            description: description,\\n            priority: priority,\\n            startDate: startData,\\n            status: status,\\n            title: title\\n        })\\n            .then((res) => {\\n                setState(res.data)\\n            })\\n        // 12534a05-5c3e-40f2-a8ac-e2da67aea32b\\n    }\\n    return <div>{JSON.stringify(state)}\\n        <div>\\n            <input placeholder=\\"TodolistId\\" value={todolistId} onChange={(e)=>{setTodolistId(e.currentTarget.value)}} />\\n            <input placeholder=\\"TaskId\\" value={taskId} onChange={(e)=>{setTaskId(e.currentTarget.value)}} />\\n\\n            <input placeholder=\\"TaskTitle\\" value={title} onChange={(e)=>{setTitle(e.currentTarget.value)}} />\\n            <input placeholder=\\"TaskDescription\\" value={description} onChange={(e)=>{setDescription(e.currentTarget.value)}} />\\n            <input placeholder=\\"TaskStatus\\" value={status} type=\\"number\\" onChange={(e)=>{setStatus(+e.currentTarget.value)}} />\\n            <input placeholder=\\"TaskPriority\\" value={priority} type=\\"number\\" onChange={(e)=>{setPriority(+e.currentTarget.value)}} />\\n            <button onClick={createTask}>Update Task</button>\\n        </div>\\n    </div>\\n}\\nexport const DeleteTask = () => {\\n    const [state, setState] = useState<any>(null)\\n    const [todolistId, setTodolistId] = useState<string>(\'\')\\n    const [taskId, setTaskId] = useState<string>(\'\')\\n    const DeleteTask = () => {\\n        // здесь мы будем делать запрос и ответ закидывать в стейт.\\n        // который в виде строки будем отображать в div-ке\\n        todolistsAPI.deleteTask(todolistId, taskId)\\n            .then((res)=> {\\n                setState(res.data)\\n            })\\n    }\\n    return <div>{JSON.stringify(state)}\\n        <div>\\n            <input placeholder=\\"todolistId\\" value={todolistId}\\n                   onChange={(e)=>{setTodolistId(e.currentTarget.value)}} />\\n            <input placeholder=\\"TaskId\\" value={taskId}\\n                   onChange={(e)=>{setTaskId(e.currentTarget.value)}} />\\n            <button onClick={DeleteTask}>Create Task</button>\\n        </div>\\n    </div>\\n}\\n\\n\\n\\n";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {"GetTodolists":{"startLoc":{"col":28,"line":8},"endLoc":{"col":1,"line":20},"startBody":{"col":28,"line":8},"endBody":{"col":1,"line":20}},"CreateTodolist":{"startLoc":{"col":30,"line":21},"endLoc":{"col":1,"line":30},"startBody":{"col":30,"line":21},"endBody":{"col":1,"line":30}},"UpdateTodolistTitle":{"startLoc":{"col":35,"line":31},"endLoc":{"col":1,"line":43},"startBody":{"col":35,"line":31},"endBody":{"col":1,"line":43}},"DeleteTodolist":{"startLoc":{"col":30,"line":44},"endLoc":{"col":1,"line":55},"startBody":{"col":30,"line":44},"endBody":{"col":1,"line":55}},"GetTasks":{"startLoc":{"col":24,"line":58},"endLoc":{"col":1,"line":76},"startBody":{"col":24,"line":58},"endBody":{"col":1,"line":76}},"CreateTask":{"startLoc":{"col":26,"line":77},"endLoc":{"col":1,"line":96},"startBody":{"col":26,"line":77},"endBody":{"col":1,"line":96}},"UpdateTask":{"startLoc":{"col":26,"line":97},"endLoc":{"col":1,"line":133},"startBody":{"col":26,"line":97},"endBody":{"col":1,"line":133}},"DeleteTask":{"startLoc":{"col":26,"line":134},"endLoc":{"col":1,"line":155},"startBody":{"col":26,"line":134},"endBody":{"col":1,"line":155}}};\n    \nimport React, {useEffect, useState} from \'react\'\nimport {todolistsAPI} from "../api/todolists-api";\n\nexport default {parameters: {"storySource":{"source":"import React, {useEffect, useState} from \'react\'\\nimport {todolistsAPI} from \\"../api/todolists-api\\";\\n\\nexport default {\\n    title: \'API\'\\n}\\n\\nexport const GetTodolists = () => {\\n    const [state, setState] = useState<any>(null)\\n    useEffect(() => {\\n        // здесь мы будем делать запрос и ответ закидывать в стейт.\\n        // который в виде строки будем отображать в div-ке\\n        todolistsAPI.getTodolists()\\n            .then((res)=> {\\n                setState(res.data)\\n            })\\n\\n    }, [])\\n    return <div>{JSON.stringify(state)}</div>\\n}\\nexport const CreateTodolist = () => {\\n    const [state, setState] = useState<any>(null)\\n    useEffect(() => {\\n        todolistsAPI.createTodolists(\\"MEGA_List\\")\\n            .then((res) => {\\n                setState(res.data)\\n            })\\n    }, [])\\n    return <div>{JSON.stringify(state)}</div>\\n}\\nexport const UpdateTodolistTitle = () => {\\n    const [state, setState] = useState<any>(null)\\n    useEffect(() => {\\n        const todolistId = \'b2b5c8b4-5c7a-4727-ac22-c3eeb40305f1\'\\n        todolistsAPI.updateTodolist(todolistId, \\"MEGA-UPDATE\\")\\n            .then((res) => {\\n                console.log(res.status)\\n                setState(res.data)\\n            })\\n\\n    }, [])\\n    return <div>{JSON.stringify(state)}</div>\\n}\\nexport const DeleteTodolist = () => {\\n    const [state, setState] = useState<any>(null)\\n    useEffect(() => {\\n        const todolistId = \'8b21800d-9b2f-42d1-a209-5e2deb8bd90c\';\\n        todolistsAPI.deleteTodolists(todolistId)\\n            .then((res) => {\\n                console.log(res.status)\\n                setState(res.data)\\n            })\\n    }, [])\\n    return <div>{JSON.stringify(state)}</div>\\n}\\n\\n\\nexport const GetTasks = () => {\\n    const [state, setState] = useState<any>(null)\\n    const [todolistId, setTodolistId] = useState<any>(null)\\n    const getTasks = () => {\\n        // здесь мы будем делать запрос и ответ закидывать в стейт.\\n        // который в виде строки будем отображать в div-ке\\n        todolistsAPI.getTasks(todolistId)\\n            .then((res)=> {\\n                setState(res.data.items)\\n            })\\n    }\\n    return <div>{JSON.stringify(state)}\\n        <div>\\n            <input placeholder=\\"todolistId\\" value={todolistId}\\n                   onChange={(e)=>{setTodolistId(e.currentTarget.value)}} />\\n            <button onClick={getTasks}>Get Task</button>\\n        </div>\\n    </div>\\n}\\nexport const CreateTask = () => {\\n    const [state, setState] = useState<any>(null)\\n    const [taskTitle, setTaskTitle] = useState<any>(null)\\n    const [todolistId, setTodolistId] = useState<any>(null)\\n    const createTask = () => {\\n        todolistsAPI.createTask(todolistId, taskTitle)\\n            .then((res) => {\\n                setState(res.data)\\n            })\\n    }\\n    return <div>{JSON.stringify(state)}\\n    <div>\\n        <input placeholder=\\"todolistId\\" value={todolistId}\\n        onChange={(e)=>{setTodolistId(e.currentTarget.value)}} />\\n        <input placeholder=\\"TaskTitle\\" value={taskTitle}\\n        onChange={(e)=>{setTaskTitle(e.currentTarget.value)}} />\\n        <button onClick={createTask}>Create Task</button>\\n    </div>\\n    </div>\\n}\\nexport const UpdateTask = () => {\\n    const [state, setState] = useState<any>(null)\\n    const [title, setTitle] = useState<string>(\'MyTask\')\\n    const [todolistId, setTodolistId] = useState<string>(\'\')\\n    const [taskId, setTaskId] = useState<string>(\'\')\\n    const [description, setDescription] = useState<string>(\'MyTaskDescription\')\\n    const [status, setStatus] = useState<number>(0)\\n    const [priority, setPriority] = useState<number>(0)\\n    const [startData, setStartData] = useState<string>(\'\')\\n    const [deadLine, setDeadLine] = useState<string>(\'\')\\n    const createTask = () => {\\n        todolistsAPI.updateTask(todolistId, taskId, {\\n            deadline: deadLine,\\n            description: description,\\n            priority: priority,\\n            startDate: startData,\\n            status: status,\\n            title: title\\n        })\\n            .then((res) => {\\n                setState(res.data)\\n            })\\n        // 12534a05-5c3e-40f2-a8ac-e2da67aea32b\\n    }\\n    return <div>{JSON.stringify(state)}\\n        <div>\\n            <input placeholder=\\"TodolistId\\" value={todolistId} onChange={(e)=>{setTodolistId(e.currentTarget.value)}} />\\n            <input placeholder=\\"TaskId\\" value={taskId} onChange={(e)=>{setTaskId(e.currentTarget.value)}} />\\n\\n            <input placeholder=\\"TaskTitle\\" value={title} onChange={(e)=>{setTitle(e.currentTarget.value)}} />\\n            <input placeholder=\\"TaskDescription\\" value={description} onChange={(e)=>{setDescription(e.currentTarget.value)}} />\\n            <input placeholder=\\"TaskStatus\\" value={status} type=\\"number\\" onChange={(e)=>{setStatus(+e.currentTarget.value)}} />\\n            <input placeholder=\\"TaskPriority\\" value={priority} type=\\"number\\" onChange={(e)=>{setPriority(+e.currentTarget.value)}} />\\n            <button onClick={createTask}>Update Task</button>\\n        </div>\\n    </div>\\n}\\nexport const DeleteTask = () => {\\n    const [state, setState] = useState<any>(null)\\n    const [todolistId, setTodolistId] = useState<string>(\'\')\\n    const [taskId, setTaskId] = useState<string>(\'\')\\n    const DeleteTask = () => {\\n        // здесь мы будем делать запрос и ответ закидывать в стейт.\\n        // который в виде строки будем отображать в div-ке\\n        todolistsAPI.deleteTask(todolistId, taskId)\\n            .then((res)=> {\\n                setState(res.data)\\n            })\\n    }\\n    return <div>{JSON.stringify(state)}\\n        <div>\\n            <input placeholder=\\"todolistId\\" value={todolistId}\\n                   onChange={(e)=>{setTodolistId(e.currentTarget.value)}} />\\n            <input placeholder=\\"TaskId\\" value={taskId}\\n                   onChange={(e)=>{setTaskId(e.currentTarget.value)}} />\\n            <button onClick={DeleteTask}>Create Task</button>\\n        </div>\\n    </div>\\n}\\n\\n\\n\\n","locationsMap":{"get-todolists":{"startLoc":{"col":28,"line":8},"endLoc":{"col":1,"line":20},"startBody":{"col":28,"line":8},"endBody":{"col":1,"line":20}},"create-todolist":{"startLoc":{"col":30,"line":21},"endLoc":{"col":1,"line":30},"startBody":{"col":30,"line":21},"endBody":{"col":1,"line":30}},"update-todolist-title":{"startLoc":{"col":35,"line":31},"endLoc":{"col":1,"line":43},"startBody":{"col":35,"line":31},"endBody":{"col":1,"line":43}},"delete-todolist":{"startLoc":{"col":30,"line":44},"endLoc":{"col":1,"line":55},"startBody":{"col":30,"line":44},"endBody":{"col":1,"line":55}},"get-tasks":{"startLoc":{"col":24,"line":58},"endLoc":{"col":1,"line":76},"startBody":{"col":24,"line":58},"endBody":{"col":1,"line":76}},"create-task":{"startLoc":{"col":26,"line":77},"endLoc":{"col":1,"line":96},"startBody":{"col":26,"line":77},"endBody":{"col":1,"line":96}},"update-task":{"startLoc":{"col":26,"line":97},"endLoc":{"col":1,"line":133},"startBody":{"col":26,"line":97},"endBody":{"col":1,"line":133}},"delete-task":{"startLoc":{"col":26,"line":134},"endLoc":{"col":1,"line":155},"startBody":{"col":26,"line":134},"endBody":{"col":1,"line":155}}}},},\n    title: \'API\'\n}\n\nexport const GetTodolists = () => {\n    const [state, setState] = useState<any>(null)\n    useEffect(() => {\n        // здесь мы будем делать запрос и ответ закидывать в стейт.\n        // который в виде строки будем отображать в div-ке\n        todolistsAPI.getTodolists()\n            .then((res)=> {\n                setState(res.data)\n            })\n\n    }, [])\n    return <div>{JSON.stringify(state)}</div>\n};\nexport const CreateTodolist = () => {\n    const [state, setState] = useState<any>(null)\n    useEffect(() => {\n        todolistsAPI.createTodolists("MEGA_List")\n            .then((res) => {\n                setState(res.data)\n            })\n    }, [])\n    return <div>{JSON.stringify(state)}</div>\n};\nexport const UpdateTodolistTitle = () => {\n    const [state, setState] = useState<any>(null)\n    useEffect(() => {\n        const todolistId = \'b2b5c8b4-5c7a-4727-ac22-c3eeb40305f1\'\n        todolistsAPI.updateTodolist(todolistId, "MEGA-UPDATE")\n            .then((res) => {\n                console.log(res.status)\n                setState(res.data)\n            })\n\n    }, [])\n    return <div>{JSON.stringify(state)}</div>\n};\nexport const DeleteTodolist = () => {\n    const [state, setState] = useState<any>(null)\n    useEffect(() => {\n        const todolistId = \'8b21800d-9b2f-42d1-a209-5e2deb8bd90c\';\n        todolistsAPI.deleteTodolists(todolistId)\n            .then((res) => {\n                console.log(res.status)\n                setState(res.data)\n            })\n    }, [])\n    return <div>{JSON.stringify(state)}</div>\n};\n\n\nexport const GetTasks = () => {\n    const [state, setState] = useState<any>(null)\n    const [todolistId, setTodolistId] = useState<any>(null)\n    const getTasks = () => {\n        // здесь мы будем делать запрос и ответ закидывать в стейт.\n        // который в виде строки будем отображать в div-ке\n        todolistsAPI.getTasks(todolistId)\n            .then((res)=> {\n                setState(res.data.items)\n            })\n    }\n    return <div>{JSON.stringify(state)}\n        <div>\n            <input placeholder="todolistId" value={todolistId}\n                   onChange={(e)=>{setTodolistId(e.currentTarget.value)}} />\n            <button onClick={getTasks}>Get Task</button>\n        </div>\n    </div>\n};\nexport const CreateTask = () => {\n    const [state, setState] = useState<any>(null)\n    const [taskTitle, setTaskTitle] = useState<any>(null)\n    const [todolistId, setTodolistId] = useState<any>(null)\n    const createTask = () => {\n        todolistsAPI.createTask(todolistId, taskTitle)\n            .then((res) => {\n                setState(res.data)\n            })\n    }\n    return <div>{JSON.stringify(state)}\n    <div>\n        <input placeholder="todolistId" value={todolistId}\n        onChange={(e)=>{setTodolistId(e.currentTarget.value)}} />\n        <input placeholder="TaskTitle" value={taskTitle}\n        onChange={(e)=>{setTaskTitle(e.currentTarget.value)}} />\n        <button onClick={createTask}>Create Task</button>\n    </div>\n    </div>\n};\nexport const UpdateTask = () => {\n    const [state, setState] = useState<any>(null)\n    const [title, setTitle] = useState<string>(\'MyTask\')\n    const [todolistId, setTodolistId] = useState<string>(\'\')\n    const [taskId, setTaskId] = useState<string>(\'\')\n    const [description, setDescription] = useState<string>(\'MyTaskDescription\')\n    const [status, setStatus] = useState<number>(0)\n    const [priority, setPriority] = useState<number>(0)\n    const [startData, setStartData] = useState<string>(\'\')\n    const [deadLine, setDeadLine] = useState<string>(\'\')\n    const createTask = () => {\n        todolistsAPI.updateTask(todolistId, taskId, {\n            deadline: deadLine,\n            description: description,\n            priority: priority,\n            startDate: startData,\n            status: status,\n            title: title\n        })\n            .then((res) => {\n                setState(res.data)\n            })\n        // 12534a05-5c3e-40f2-a8ac-e2da67aea32b\n    }\n    return <div>{JSON.stringify(state)}\n        <div>\n            <input placeholder="TodolistId" value={todolistId} onChange={(e)=>{setTodolistId(e.currentTarget.value)}} />\n            <input placeholder="TaskId" value={taskId} onChange={(e)=>{setTaskId(e.currentTarget.value)}} />\n\n            <input placeholder="TaskTitle" value={title} onChange={(e)=>{setTitle(e.currentTarget.value)}} />\n            <input placeholder="TaskDescription" value={description} onChange={(e)=>{setDescription(e.currentTarget.value)}} />\n            <input placeholder="TaskStatus" value={status} type="number" onChange={(e)=>{setStatus(+e.currentTarget.value)}} />\n            <input placeholder="TaskPriority" value={priority} type="number" onChange={(e)=>{setPriority(+e.currentTarget.value)}} />\n            <button onClick={createTask}>Update Task</button>\n        </div>\n    </div>\n};\nexport const DeleteTask = () => {\n    const [state, setState] = useState<any>(null)\n    const [todolistId, setTodolistId] = useState<string>(\'\')\n    const [taskId, setTaskId] = useState<string>(\'\')\n    const DeleteTask = () => {\n        // здесь мы будем делать запрос и ответ закидывать в стейт.\n        // который в виде строки будем отображать в div-ке\n        todolistsAPI.deleteTask(todolistId, taskId)\n            .then((res)=> {\n                setState(res.data)\n            })\n    }\n    return <div>{JSON.stringify(state)}\n        <div>\n            <input placeholder="todolistId" value={todolistId}\n                   onChange={(e)=>{setTodolistId(e.currentTarget.value)}} />\n            <input placeholder="TaskId" value={taskId}\n                   onChange={(e)=>{setTaskId(e.currentTarget.value)}} />\n            <button onClick={DeleteTask}>Create Task</button>\n        </div>\n    </div>\n};\n\n\n',locationsMap:{"get-todolists":{startLoc:{col:28,line:16},endLoc:{col:1,line:28},startBody:{col:28,line:16},endBody:{col:1,line:28}},"create-todolist":{startLoc:{col:30,line:29},endLoc:{col:1,line:38},startBody:{col:30,line:29},endBody:{col:1,line:38}},"update-todolist-title":{startLoc:{col:35,line:39},endLoc:{col:1,line:51},startBody:{col:35,line:39},endBody:{col:1,line:51}},"delete-todolist":{startLoc:{col:30,line:52},endLoc:{col:1,line:63},startBody:{col:30,line:52},endBody:{col:1,line:63}},"get-tasks":{startLoc:{col:24,line:66},endLoc:{col:1,line:84},startBody:{col:24,line:66},endBody:{col:1,line:84}},"create-task":{startLoc:{col:26,line:85},endLoc:{col:1,line:104},startBody:{col:26,line:85},endBody:{col:1,line:104}},"update-task":{startLoc:{col:26,line:105},endLoc:{col:1,line:141},startBody:{col:26,line:105},endBody:{col:1,line:141}},"delete-task":{startLoc:{col:26,line:142},endLoc:{col:1,line:163},startBody:{col:26,line:142},endBody:{col:1,line:163}}}}},"storySource",{source:'import React, {useEffect, useState} from \'react\'\nimport {todolistsAPI} from "../api/todolists-api";\n\nexport default {\n    title: \'API\'\n}\n\nexport const GetTodolists = () => {\n    const [state, setState] = useState<any>(null)\n    useEffect(() => {\n        // здесь мы будем делать запрос и ответ закидывать в стейт.\n        // который в виде строки будем отображать в div-ке\n        todolistsAPI.getTodolists()\n            .then((res)=> {\n                setState(res.data)\n            })\n\n    }, [])\n    return <div>{JSON.stringify(state)}</div>\n}\nexport const CreateTodolist = () => {\n    const [state, setState] = useState<any>(null)\n    useEffect(() => {\n        todolistsAPI.createTodolists("MEGA_List")\n            .then((res) => {\n                setState(res.data)\n            })\n    }, [])\n    return <div>{JSON.stringify(state)}</div>\n}\nexport const UpdateTodolistTitle = () => {\n    const [state, setState] = useState<any>(null)\n    useEffect(() => {\n        const todolistId = \'b2b5c8b4-5c7a-4727-ac22-c3eeb40305f1\'\n        todolistsAPI.updateTodolist(todolistId, "MEGA-UPDATE")\n            .then((res) => {\n                console.log(res.status)\n                setState(res.data)\n            })\n\n    }, [])\n    return <div>{JSON.stringify(state)}</div>\n}\nexport const DeleteTodolist = () => {\n    const [state, setState] = useState<any>(null)\n    useEffect(() => {\n        const todolistId = \'8b21800d-9b2f-42d1-a209-5e2deb8bd90c\';\n        todolistsAPI.deleteTodolists(todolistId)\n            .then((res) => {\n                console.log(res.status)\n                setState(res.data)\n            })\n    }, [])\n    return <div>{JSON.stringify(state)}</div>\n}\n\n\nexport const GetTasks = () => {\n    const [state, setState] = useState<any>(null)\n    const [todolistId, setTodolistId] = useState<any>(null)\n    const getTasks = () => {\n        // здесь мы будем делать запрос и ответ закидывать в стейт.\n        // который в виде строки будем отображать в div-ке\n        todolistsAPI.getTasks(todolistId)\n            .then((res)=> {\n                setState(res.data.items)\n            })\n    }\n    return <div>{JSON.stringify(state)}\n        <div>\n            <input placeholder="todolistId" value={todolistId}\n                   onChange={(e)=>{setTodolistId(e.currentTarget.value)}} />\n            <button onClick={getTasks}>Get Task</button>\n        </div>\n    </div>\n}\nexport const CreateTask = () => {\n    const [state, setState] = useState<any>(null)\n    const [taskTitle, setTaskTitle] = useState<any>(null)\n    const [todolistId, setTodolistId] = useState<any>(null)\n    const createTask = () => {\n        todolistsAPI.createTask(todolistId, taskTitle)\n            .then((res) => {\n                setState(res.data)\n            })\n    }\n    return <div>{JSON.stringify(state)}\n    <div>\n        <input placeholder="todolistId" value={todolistId}\n        onChange={(e)=>{setTodolistId(e.currentTarget.value)}} />\n        <input placeholder="TaskTitle" value={taskTitle}\n        onChange={(e)=>{setTaskTitle(e.currentTarget.value)}} />\n        <button onClick={createTask}>Create Task</button>\n    </div>\n    </div>\n}\nexport const UpdateTask = () => {\n    const [state, setState] = useState<any>(null)\n    const [title, setTitle] = useState<string>(\'MyTask\')\n    const [todolistId, setTodolistId] = useState<string>(\'\')\n    const [taskId, setTaskId] = useState<string>(\'\')\n    const [description, setDescription] = useState<string>(\'MyTaskDescription\')\n    const [status, setStatus] = useState<number>(0)\n    const [priority, setPriority] = useState<number>(0)\n    const [startData, setStartData] = useState<string>(\'\')\n    const [deadLine, setDeadLine] = useState<string>(\'\')\n    const createTask = () => {\n        todolistsAPI.updateTask(todolistId, taskId, {\n            deadline: deadLine,\n            description: description,\n            priority: priority,\n            startDate: startData,\n            status: status,\n            title: title\n        })\n            .then((res) => {\n                setState(res.data)\n            })\n        // 12534a05-5c3e-40f2-a8ac-e2da67aea32b\n    }\n    return <div>{JSON.stringify(state)}\n        <div>\n            <input placeholder="TodolistId" value={todolistId} onChange={(e)=>{setTodolistId(e.currentTarget.value)}} />\n            <input placeholder="TaskId" value={taskId} onChange={(e)=>{setTaskId(e.currentTarget.value)}} />\n\n            <input placeholder="TaskTitle" value={title} onChange={(e)=>{setTitle(e.currentTarget.value)}} />\n            <input placeholder="TaskDescription" value={description} onChange={(e)=>{setDescription(e.currentTarget.value)}} />\n            <input placeholder="TaskStatus" value={status} type="number" onChange={(e)=>{setStatus(+e.currentTarget.value)}} />\n            <input placeholder="TaskPriority" value={priority} type="number" onChange={(e)=>{setPriority(+e.currentTarget.value)}} />\n            <button onClick={createTask}>Update Task</button>\n        </div>\n    </div>\n}\nexport const DeleteTask = () => {\n    const [state, setState] = useState<any>(null)\n    const [todolistId, setTodolistId] = useState<string>(\'\')\n    const [taskId, setTaskId] = useState<string>(\'\')\n    const DeleteTask = () => {\n        // здесь мы будем делать запрос и ответ закидывать в стейт.\n        // который в виде строки будем отображать в div-ке\n        todolistsAPI.deleteTask(todolistId, taskId)\n            .then((res)=> {\n                setState(res.data)\n            })\n    }\n    return <div>{JSON.stringify(state)}\n        <div>\n            <input placeholder="todolistId" value={todolistId}\n                   onChange={(e)=>{setTodolistId(e.currentTarget.value)}} />\n            <input placeholder="TaskId" value={taskId}\n                   onChange={(e)=>{setTaskId(e.currentTarget.value)}} />\n            <button onClick={DeleteTask}>Create Task</button>\n        </div>\n    </div>\n}\n\n\n\n',locationsMap:{"get-todolists":{startLoc:{col:28,line:8},endLoc:{col:1,line:20},startBody:{col:28,line:8},endBody:{col:1,line:20}},"create-todolist":{startLoc:{col:30,line:21},endLoc:{col:1,line:30},startBody:{col:30,line:21},endBody:{col:1,line:30}},"update-todolist-title":{startLoc:{col:35,line:31},endLoc:{col:1,line:43},startBody:{col:35,line:31},endBody:{col:1,line:43}},"delete-todolist":{startLoc:{col:30,line:44},endLoc:{col:1,line:55},startBody:{col:30,line:44},endBody:{col:1,line:55}},"get-tasks":{startLoc:{col:24,line:58},endLoc:{col:1,line:76},startBody:{col:24,line:58},endBody:{col:1,line:76}},"create-task":{startLoc:{col:26,line:77},endLoc:{col:1,line:96},startBody:{col:26,line:77},endBody:{col:1,line:96}},"update-task":{startLoc:{col:26,line:97},endLoc:{col:1,line:133},startBody:{col:26,line:97},endBody:{col:1,line:133}},"delete-task":{startLoc:{col:26,line:134},endLoc:{col:1,line:155},startBody:{col:26,line:134},endBody:{col:1,line:155}}}}),title:"API"};var GetTodolists=function GetTodolists(){var _useState=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),_useState2=(0,_home_msa_ReactSamurai_it_inc_todolist_it_inc_todolist_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_useState,2),state=_useState2[0],setState=_useState2[1];return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((function(){_api_todolists_api__WEBPACK_IMPORTED_MODULE_1__.Z2.getTodolists().then((function(res){setState(res.data)}))}),[]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{children:JSON.stringify(state)})},CreateTodolist=function CreateTodolist(){var _useState3=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),_useState4=(0,_home_msa_ReactSamurai_it_inc_todolist_it_inc_todolist_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_useState3,2),state=_useState4[0],setState=_useState4[1];return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((function(){_api_todolists_api__WEBPACK_IMPORTED_MODULE_1__.Z2.createTodolists("MEGA_List").then((function(res){setState(res.data)}))}),[]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{children:JSON.stringify(state)})},UpdateTodolistTitle=function UpdateTodolistTitle(){var _useState5=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),_useState6=(0,_home_msa_ReactSamurai_it_inc_todolist_it_inc_todolist_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_useState5,2),state=_useState6[0],setState=_useState6[1];return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((function(){_api_todolists_api__WEBPACK_IMPORTED_MODULE_1__.Z2.updateTodolist("b2b5c8b4-5c7a-4727-ac22-c3eeb40305f1","MEGA-UPDATE").then((function(res){console.log(res.status),setState(res.data)}))}),[]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{children:JSON.stringify(state)})},DeleteTodolist=function DeleteTodolist(){var _useState7=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),_useState8=(0,_home_msa_ReactSamurai_it_inc_todolist_it_inc_todolist_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_useState7,2),state=_useState8[0],setState=_useState8[1];return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((function(){_api_todolists_api__WEBPACK_IMPORTED_MODULE_1__.Z2.deleteTodolists("8b21800d-9b2f-42d1-a209-5e2deb8bd90c").then((function(res){console.log(res.status),setState(res.data)}))}),[]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{children:JSON.stringify(state)})},GetTasks=function GetTasks(){var _useState9=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),_useState10=(0,_home_msa_ReactSamurai_it_inc_todolist_it_inc_todolist_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_useState9,2),state=_useState10[0],setState=_useState10[1],_useState11=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),_useState12=(0,_home_msa_ReactSamurai_it_inc_todolist_it_inc_todolist_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_useState11,2),todolistId=_useState12[0],setTodolistId=_useState12[1];return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("div",{children:[JSON.stringify(state),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("input",{placeholder:"todolistId",value:todolistId,onChange:function onChange(e){setTodolistId(e.currentTarget.value)}}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("button",{onClick:function getTasks(){_api_todolists_api__WEBPACK_IMPORTED_MODULE_1__.Z2.getTasks(todolistId).then((function(res){setState(res.data.items)}))},children:"Get Task"})]})]})},CreateTask=function CreateTask(){var _useState13=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),_useState14=(0,_home_msa_ReactSamurai_it_inc_todolist_it_inc_todolist_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_useState13,2),state=_useState14[0],setState=_useState14[1],_useState15=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),_useState16=(0,_home_msa_ReactSamurai_it_inc_todolist_it_inc_todolist_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_useState15,2),taskTitle=_useState16[0],setTaskTitle=_useState16[1],_useState17=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),_useState18=(0,_home_msa_ReactSamurai_it_inc_todolist_it_inc_todolist_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_useState17,2),todolistId=_useState18[0],setTodolistId=_useState18[1];return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("div",{children:[JSON.stringify(state),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("input",{placeholder:"todolistId",value:todolistId,onChange:function onChange(e){setTodolistId(e.currentTarget.value)}}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("input",{placeholder:"TaskTitle",value:taskTitle,onChange:function onChange(e){setTaskTitle(e.currentTarget.value)}}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("button",{onClick:function createTask(){_api_todolists_api__WEBPACK_IMPORTED_MODULE_1__.Z2.createTask(todolistId,taskTitle).then((function(res){setState(res.data)}))},children:"Create Task"})]})]})},UpdateTask=function UpdateTask(){var _useState19=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),_useState20=(0,_home_msa_ReactSamurai_it_inc_todolist_it_inc_todolist_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_useState19,2),state=_useState20[0],setState=_useState20[1],_useState21=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)("MyTask"),_useState22=(0,_home_msa_ReactSamurai_it_inc_todolist_it_inc_todolist_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_useState21,2),title=_useState22[0],setTitle=_useState22[1],_useState23=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(""),_useState24=(0,_home_msa_ReactSamurai_it_inc_todolist_it_inc_todolist_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_useState23,2),todolistId=_useState24[0],setTodolistId=_useState24[1],_useState25=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(""),_useState26=(0,_home_msa_ReactSamurai_it_inc_todolist_it_inc_todolist_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_useState25,2),taskId=_useState26[0],setTaskId=_useState26[1],_useState27=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)("MyTaskDescription"),_useState28=(0,_home_msa_ReactSamurai_it_inc_todolist_it_inc_todolist_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_useState27,2),description=_useState28[0],setDescription=_useState28[1],_useState29=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0),_useState30=(0,_home_msa_ReactSamurai_it_inc_todolist_it_inc_todolist_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_useState29,2),status=_useState30[0],setStatus=_useState30[1],_useState31=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0),_useState32=(0,_home_msa_ReactSamurai_it_inc_todolist_it_inc_todolist_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_useState31,2),priority=_useState32[0],setPriority=_useState32[1],_useState33=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(""),_useState34=(0,_home_msa_ReactSamurai_it_inc_todolist_it_inc_todolist_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_useState33,2),startData=_useState34[0],_useState35=(_useState34[1],(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)("")),_useState36=(0,_home_msa_ReactSamurai_it_inc_todolist_it_inc_todolist_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_useState35,2),deadLine=_useState36[0];_useState36[1];return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("div",{children:[JSON.stringify(state),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("input",{placeholder:"TodolistId",value:todolistId,onChange:function onChange(e){setTodolistId(e.currentTarget.value)}}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("input",{placeholder:"TaskId",value:taskId,onChange:function onChange(e){setTaskId(e.currentTarget.value)}}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("input",{placeholder:"TaskTitle",value:title,onChange:function onChange(e){setTitle(e.currentTarget.value)}}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("input",{placeholder:"TaskDescription",value:description,onChange:function onChange(e){setDescription(e.currentTarget.value)}}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("input",{placeholder:"TaskStatus",value:status,type:"number",onChange:function onChange(e){setStatus(+e.currentTarget.value)}}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("input",{placeholder:"TaskPriority",value:priority,type:"number",onChange:function onChange(e){setPriority(+e.currentTarget.value)}}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("button",{onClick:function createTask(){_api_todolists_api__WEBPACK_IMPORTED_MODULE_1__.Z2.updateTask(todolistId,taskId,{deadline:deadLine,description:description,priority:priority,startDate:startData,status:status,title:title}).then((function(res){setState(res.data)}))},children:"Update Task"})]})]})},DeleteTask=function DeleteTask(){var _useState37=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),_useState38=(0,_home_msa_ReactSamurai_it_inc_todolist_it_inc_todolist_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_useState37,2),state=_useState38[0],setState=_useState38[1],_useState39=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(""),_useState40=(0,_home_msa_ReactSamurai_it_inc_todolist_it_inc_todolist_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_useState39,2),todolistId=_useState40[0],setTodolistId=_useState40[1],_useState41=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(""),_useState42=(0,_home_msa_ReactSamurai_it_inc_todolist_it_inc_todolist_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_4__.Z)(_useState41,2),taskId=_useState42[0],setTaskId=_useState42[1],DeleteTask=function DeleteTask(){_api_todolists_api__WEBPACK_IMPORTED_MODULE_1__.Z2.deleteTask(todolistId,taskId).then((function(res){setState(res.data)}))};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("div",{children:[JSON.stringify(state),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("input",{placeholder:"todolistId",value:todolistId,onChange:function onChange(e){setTodolistId(e.currentTarget.value)}}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("input",{placeholder:"TaskId",value:taskId,onChange:function onChange(e){setTaskId(e.currentTarget.value)}}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("button",{onClick:DeleteTask,children:"Create Task"})]})]})},__namedExportsOrder=["GetTodolists","CreateTodolist","UpdateTodolistTitle","DeleteTodolist","GetTasks","CreateTask","UpdateTask","DeleteTask"]},"./.storybook/preview.js-generated-config-entry.js":function(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__){"use strict";var preview_namespaceObject={};__webpack_require__.r(preview_namespaceObject),__webpack_require__.d(preview_namespaceObject,{__namedExportsOrder:function(){return __namedExportsOrder},parameters:function(){return parameters}});var ClientApi=__webpack_require__("./node_modules/@storybook/client-api/dist/esm/ClientApi.js"),parameters={actions:{argTypesRegex:"^on[A-Z].*"},controls:{matchers:{color:/(background|color)$/i,date:/Date$/}}},__namedExportsOrder=["parameters"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.keys(preview_namespaceObject).forEach((function(key){var value=preview_namespaceObject[key];switch(key){case"args":return(0,ClientApi.uc)(value);case"argTypes":return(0,ClientApi.v9)(value);case"decorators":return value.forEach((function(decorator){return(0,ClientApi.$9)(decorator,!1)}));case"loaders":return value.forEach((function(loader){return(0,ClientApi.HZ)(loader,!1)}));case"parameters":return(0,ClientApi.h1)(function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}({},value),!1);case"argTypesEnhancers":return value.forEach((function(enhancer){return(0,ClientApi.My)(enhancer)}));case"argsEnhancers":return value.forEach((function(enhancer){return(0,ClientApi._C)(enhancer)}));case"render":return(0,ClientApi.$P)(value);case"globals":case"globalTypes":var v={};return v[key]=value,(0,ClientApi.h1)(v,!1);case"__namedExportsOrder":case"decorateStory":case"renderToDOM":return null;default:return console.log(key+" was not supported :( !")}}))},"./src/api/todolists-api.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{Fm:function(){return TaskStatuses},Z2:function(){return todolistsAPI},kv:function(){return authAPI},xy:function(){return TaskPriorities}});var TaskStatuses,TaskPriorities,_home_msa_ReactSamurai_it_inc_todolist_it_inc_todolist_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),axios__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/axios/index.js"),instance=__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__)().create((0,_home_msa_ReactSamurai_it_inc_todolist_it_inc_todolist_node_modules_babel_runtime_helpers_esm_objectSpread2_js__WEBPACK_IMPORTED_MODULE_1__.Z)({baseURL:"https://social-network.samuraijs.com/api/1.1/"},{withCredentials:!0,headers:{"API-KEY":"43312b93-73fd-4342-90f4-f7fe2aad1adb"}})),todolistsAPI={getTodolists:function getTodolists(){return instance.get("todo-lists")},createTodolists:function createTodolists(title){return instance.post("todo-lists",{title:title})},deleteTodolists:function deleteTodolists(id){return instance.delete("todo-lists/".concat(id))},updateTodolist:function updateTodolist(id,title){return instance.put("todo-lists/".concat(id),{title:title})},getTasks:function getTasks(todolistId){return instance.get("todo-lists/".concat(todolistId,"/tasks"))},createTask:function createTask(todolistId,title){return instance.post("/todo-lists/".concat(todolistId,"/tasks"),{title:title})},updateTask:function updateTask(todolistId,taskId,model){return instance.put("/todo-lists/".concat(todolistId,"/tasks/").concat(taskId),model)},deleteTask:function deleteTask(todolistId,taskId){return instance.delete("todo-lists/".concat(todolistId,"/tasks/").concat(taskId))}},authAPI={login:function login(params){return instance.post("auth/login",params)},me:function me(){return instance.get("auth/me")},logOut:function logOut(){return instance.delete("auth/login")}};!function(TaskStatuses){TaskStatuses[TaskStatuses.New=0]="New",TaskStatuses[TaskStatuses.InProgress=1]="InProgress",TaskStatuses[TaskStatuses.Completed=2]="Completed",TaskStatuses[TaskStatuses.Draft=3]="Draft"}(TaskStatuses||(TaskStatuses={})),function(TaskPriorities){TaskPriorities[TaskPriorities.Low=0]="Low",TaskPriorities[TaskPriorities.Middle=1]="Middle",TaskPriorities[TaskPriorities.Hi=2]="Hi",TaskPriorities[TaskPriorities.Urgently=3]="Urgently",TaskPriorities[TaskPriorities.Later=4]="Later"}(TaskPriorities||(TaskPriorities={}))},"./src/components/AddItemForm/AddItemForm.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{B:function(){return AddItemForm}});var _home_msa_ReactSamurai_it_inc_todolist_it_inc_todolist_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),_mui_material__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mui/material/Grid/Grid.js"),_mui_material__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@mui/material/TextField/TextField.js"),_mui_material__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@mui/material/IconButton/IconButton.js"),react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_mui_icons_material_AddCircleOutline__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@mui/icons-material/AddCircleOutline.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js"),AddItemForm=react__WEBPACK_IMPORTED_MODULE_0__.memo((function(_ref){var addItem=_ref.addItem,_ref$disabled=_ref.disabled,disabled=void 0!==_ref$disabled&&_ref$disabled;console.log("AdditemForm is called");var _useState=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(""),_useState2=(0,_home_msa_ReactSamurai_it_inc_todolist_it_inc_todolist_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_2__.Z)(_useState,2),title=_useState2[0],setTitle=_useState2[1],_useState3=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),_useState4=(0,_home_msa_ReactSamurai_it_inc_todolist_it_inc_todolist_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_2__.Z)(_useState3,2),error=_useState4[0],setError=_useState4[1],addItemHandler=function addItemHandler(){title.trim()?(addItem(title),setTitle("")):setError("Title is required")};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_mui_material__WEBPACK_IMPORTED_MODULE_3__.ZP,{xs:12,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material__WEBPACK_IMPORTED_MODULE_4__.Z,{disabled:disabled,onChange:function onChangeHandler(e){setTitle(e.currentTarget.value)},onKeyPress:function onKeyPressHandler(e){null!==error&&setError(null),"Enter"===e.key&&addItemHandler()},className:error?"error":"",variant:"outlined",size:"small",label:"Type task",error:!!error,helperText:error,value:title}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material__WEBPACK_IMPORTED_MODULE_5__.Z,{color:"warning",size:"medium",onClick:addItemHandler,disabled:disabled,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_icons_material_AddCircleOutline__WEBPACK_IMPORTED_MODULE_6__.Z,{})})]})}));try{AddItemForm.displayName="AddItemForm",AddItemForm.__docgenInfo={description:"",displayName:"AddItemForm",props:{addItem:{defaultValue:null,description:"",name:"addItem",required:!0,type:{name:"(title: string) => void"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/AddItemForm/AddItemForm.tsx#AddItemForm"]={docgenInfo:AddItemForm.__docgenInfo,name:"AddItemForm",path:"src/components/AddItemForm/AddItemForm.tsx#AddItemForm"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/EditableSpan/EditableSpan.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{m:function(){return EditableSpan}});var _home_msa_ReactSamurai_it_inc_todolist_it_inc_todolist_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_mui_material__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mui/material/TextField/TextField.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js"),EditableSpan=react__WEBPACK_IMPORTED_MODULE_0__.memo((function(props){console.log("Editable span");var _useState=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(""),_useState2=(0,_home_msa_ReactSamurai_it_inc_todolist_it_inc_todolist_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_2__.Z)(_useState,2),title=_useState2[0],setTitle=_useState2[1],_useState3=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),_useState4=(0,_home_msa_ReactSamurai_it_inc_todolist_it_inc_todolist_node_modules_babel_runtime_helpers_esm_slicedToArray_js__WEBPACK_IMPORTED_MODULE_2__.Z)(_useState3,2),editMode=_useState4[0],setEditMode=_useState4[1];return editMode?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material__WEBPACK_IMPORTED_MODULE_3__.Z,{variant:"standard",autoFocus:!0,value:title,onBlur:function OnBlurHandler(){setEditMode(!1),props.onChange(title)},onChange:function onChangeHandler(e){setTitle(e.currentTarget.value)}}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("span",{onDoubleClick:function activateEditMode(){setEditMode(!0),setTitle(props.title)},children:props.title})}));try{EditableSpan.displayName="EditableSpan",EditableSpan.__docgenInfo={description:"",displayName:"EditableSpan",props:{title:{defaultValue:null,description:"",name:"title",required:!0,type:{name:"string"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"(newTitle: string) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/EditableSpan/EditableSpan.tsx#EditableSpan"]={docgenInfo:EditableSpan.__docgenInfo,name:"EditableSpan",path:"src/components/EditableSpan/EditableSpan.tsx#EditableSpan"})}catch(__react_docgen_typescript_loader_error){}},"./src/features/TodolistsList/Todolist/Task/Task.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,{i:function(){return Task}});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_mui_material__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@mui/material/Checkbox/Checkbox.js"),_components_EditableSpan_EditableSpan__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/EditableSpan/EditableSpan.tsx"),_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@mui/material/IconButton/IconButton.js"),_mui_icons_material_Delete__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@mui/icons-material/Delete.js"),_api_todolists_api__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/api/todolists-api.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react/jsx-runtime.js"),Task=react__WEBPACK_IMPORTED_MODULE_0__.memo((function(props){var onChangeTitleHandler=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((function(newTitle){props.changeTaskTitle(props.todolistId,props.task.id,newTitle)}),[props.task.id,props.changeTaskTitle,props.todolistId]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("li",{className:props.task.status===_api_todolists_api__WEBPACK_IMPORTED_MODULE_2__.Fm.Completed?"is-done":"",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("div",{className:"tasks",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_mui_material__WEBPACK_IMPORTED_MODULE_4__.Z,{color:"secondary",onChange:function onChangeStatusHandler(e){var newIsDoneValue=e.currentTarget.checked;props.changeTaskStatus(props.todolistId,props.task.id,newIsDoneValue?_api_todolists_api__WEBPACK_IMPORTED_MODULE_2__.Fm.Completed:_api_todolists_api__WEBPACK_IMPORTED_MODULE_2__.Fm.New)},checked:props.task.status===_api_todolists_api__WEBPACK_IMPORTED_MODULE_2__.Fm.Completed}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_components_EditableSpan_EditableSpan__WEBPACK_IMPORTED_MODULE_1__.m,{title:props.task.title,onChange:onChangeTitleHandler}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_5__.Z,{onClick:function onClickHandler(){props.removeTask(props.todolistId,props.task.id)},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_mui_icons_material_Delete__WEBPACK_IMPORTED_MODULE_6__.Z,{})})]})},props.task.id)}));try{Task.displayName="Task",Task.__docgenInfo={description:"",displayName:"Task",props:{changeTaskStatus:{defaultValue:null,description:"",name:"changeTaskStatus",required:!0,type:{name:"(todolistID: string, id: string, status: TaskStatuses) => void"}},changeTaskTitle:{defaultValue:null,description:"",name:"changeTaskTitle",required:!0,type:{name:"(todolistID: string, id: string, newTitle: string) => void"}},removeTask:{defaultValue:null,description:"",name:"removeTask",required:!0,type:{name:"(todolistID: string, taskId: string) => void"}},task:{defaultValue:null,description:"",name:"task",required:!0,type:{name:"TaskType"}},todolistId:{defaultValue:null,description:"",name:"todolistId",required:!0,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/features/TodolistsList/Todolist/Task/Task.tsx#Task"]={docgenInfo:Task.__docgenInfo,name:"Task",path:"src/features/TodolistsList/Todolist/Task/Task.tsx#Task"})}catch(__react_docgen_typescript_loader_error){}},"./src sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx))$":function(module,__unused_webpack_exports,__webpack_require__){var map={"./App/App.stories.tsx":"./src/App/App.stories.tsx","./components/AddItemForm/AddItemForm.stories.tsx":"./src/components/AddItemForm/AddItemForm.stories.tsx","./components/EditableSpan/EditableSpan.stories.tsx":"./src/components/EditableSpan/EditableSpan.stories.tsx","./features/TodolistsList/Todolist/Task/Task.stories.tsx":"./src/features/TodolistsList/Todolist/Task/Task.stories.tsx","./stories/todolists-api.stories.tsx":"./src/stories/todolists-api.stories.tsx"};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id="./src sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx))$"},"./src sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$":function(module){function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=function(){return[]},webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./src sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$",module.exports=webpackEmptyContext},"./storybook-init-framework-entry.js":function(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__){"use strict";__webpack_require__("./node_modules/@storybook/react/dist/esm/client/index.js")},"?4f7e":function(){},"./generated-stories-entry.cjs":function(module,__unused_webpack_exports,__webpack_require__){"use strict";module=__webpack_require__.nmd(module),(0,__webpack_require__("./node_modules/@storybook/react/dist/esm/client/index.js").configure)([__webpack_require__("./src sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.mdx)$"),__webpack_require__("./src sync recursive ^\\.(?:(?:^%7C\\/%7C(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx))$")],module,!1)}},function(__webpack_require__){var __webpack_exec__=function(moduleId){return __webpack_require__(__webpack_require__.s=moduleId)};__webpack_require__.O(0,[379],(function(){return __webpack_exec__("./node_modules/@storybook/core-client/dist/esm/globals/polyfills.js"),__webpack_exec__("./node_modules/@storybook/core-client/dist/esm/globals/globals.js"),__webpack_exec__("./storybook-init-framework-entry.js"),__webpack_exec__("./node_modules/@storybook/react/dist/esm/client/docs/config-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/react/dist/esm/client/preview/config-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-links/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-actions/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-backgrounds/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-measure/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-outline/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-interactions/preview.js-generated-config-entry.js"),__webpack_exec__("./node_modules/@storybook/addon-docs/preview.js-generated-config-entry.js"),__webpack_exec__("./.storybook/preview.js-generated-config-entry.js"),__webpack_exec__("./generated-stories-entry.cjs")}));__webpack_require__.O()}]);